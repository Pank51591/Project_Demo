C51 COMPILER V9.60.0.0   SC95F_TIMER1                                                      10/18/2023 18:03:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SC95F_TIMER1
OBJECT MODULE PLACED IN ..\Output\sc95f_timer1.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_timer1.c LARGE OBJECTAD
                    -VANCED OPTIMIZE(9,SIZE) BROWSE INCDIR(..\FWLib\SC95F_Lib\inc;..\User;..\User\Funtion;..\SOC_DebugTouchKey_Lib;..\SOC_Deb
                    -ugTouchKey_Lib) DEFINE(SC95F8x1xB) DEBUG PRINT(..\List\sc95f_timer1.lst) TABS(2) OBJECT(..\Output\sc95f_timer1.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //  文件名称:     sc95f_timer1.c
   4          //  作者:         赛元应用团队
   5          //  模块功能:     BTM固件库函数C文件
   6          //  最后更正日期: 2022年3月23日
   7          //  版本:         V1.10001
   8          //  说明: 
   9          //*************************************************************
  10          
  11          #include "sc95f_timer1.h"
  12          
  13          /**************************************************
  14          *函数名称:void TIM1_DeInit(void)
  15          *函数功能:TIMER1相关寄存器复位至缺省值
  16          *入口参数:void
  17          *出口参数:void
  18          **************************************************/
  19          void TIM1_DeInit(void)
  20          {
  21   1        TMOD &= 0X0F;
  22   1        TCON &= 0X37;
  23   1        TMCON &= 0XFD;
  24   1        TH1 = 0X00;
  25   1        TL1 = 0X00;
  26   1        ET1 = 0;
  27   1        IPT1 = 0;
  28   1      }
  29          
  30          /**************************************************
  31          *函数名称:void TIM1_TimeBaseInit(TIM1_PresSel_TypeDef TIM1_PrescalerSelection, TIM1_CountMode_TypeDef TIM1
             -_CountMode)
  32          *函数功能:TIMER1基本设置配置函数
  33          *入口参数:
  34          TIM1_PresSel_TypeDef:TIM1_PrescalerSelection:预分频选择
  35          TIM1_CountMode_TypeDef:TIM1_CountMode:计数/定时模式选择
  36          *出口参数:void
  37          **************************************************/
  38          void TIM1_TimeBaseInit(TIM1_PresSel_TypeDef TIM1_PrescalerSelection,
  39                                 TIM1_CountMode_TypeDef TIM1_CountMode)
  40          {
  41   1        if(TIM1_PrescalerSelection == TIM1_PRESSEL_FSYS_D12)
  42   1        {
  43   2          TMCON &= 0xFD;
  44   2        }
  45   1        else if(TIM1_PrescalerSelection == TIM1_PRESSEL_FSYS_D1)
  46   1        {
  47   2          TMCON |= 0x02;
  48   2        }
  49   1      
  50   1        /************************************************************/
  51   1        if(TIM1_CountMode == TIM1_MODE_TIMER)
  52   1        {
C51 COMPILER V9.60.0.0   SC95F_TIMER1                                                      10/18/2023 18:03:58 PAGE 2   

  53   2          TMOD &= 0xBF;
  54   2        }
  55   1        else if(TIM1_CountMode == TIM1_MODE_COUNTER)
  56   1        {
  57   2          TMOD |= 0x40;
  58   2        }
  59   1      }
  60          
  61          /**************************************************
  62          *函数名称:void TIM1_WorkMode0Config(uint16_t TIM1_SetCounter)
  63          *函数功能:TIMER1工作模式0配置函数
  64          *入口参数:
  65          uint16_t:TIM1_SetCounter:配置计数初值
  66          *出口参数:void
  67          **************************************************/
  68          void TIM1_WorkMode0Config(uint16_t TIM1_SetCounter)
  69          {
  70   1        TMOD &= 0XCF;
  71   1        TL1 = (uint8_t)TIM1_SetCounter;
  72   1        TH1 = (TIM1_SetCounter >> 5);
  73   1      }
  74          
  75          /**************************************************
  76          *函数名称:void TIM1_WorkMode1Config(uint16_t TIM1_SetCounter)
  77          *函数功能:TIMER1工作模式1配置函数
  78          *入口参数:
  79          uint16_t:TIM1_SetCounter:配置计数初值
  80          *出口参数:void
  81          **************************************************/
  82          void TIM1_WorkMode1Config(uint16_t TIM1_SetCounter)
  83          {
  84   1        TMOD &= 0XCF;
  85   1        TMOD |= 0X10;
  86   1        TL1 = TIM1_SetCounter % 256;
  87   1        TH1 = TIM1_SetCounter / 256;
  88   1      }
  89          
  90          /**************************************************
  91          *函数名称:void TIM1_WorkMode2Config(uint8_t TIM1_SetCounter)
  92          *函数功能:TIMER1工作模式2配置函数
  93          *入口参数:
  94          uint8_t:TIM1_SetCounter:配置计数初值
  95          *出口参数:void
  96          **************************************************/
  97          void TIM1_WorkMode2Config(uint8_t TIM1_SetCounter)
  98          {
  99   1        TMOD &= 0XCF;
 100   1        TMOD |= 0X20;
 101   1        TL1 = TIM1_SetCounter;
 102   1        TH1 = TIM1_SetCounter;
 103   1      }
 104          
 105          /**************************************************
 106          *函数名称:void TIM1_WorkModeConfig(TIM1_WorkMode_TypeDef TIM1_WorkMode, uint16_t TIM1_SetCounter)
 107          *函数功能:TIMER1工作模式配置函数
 108          *入口参数:
 109          TIM1_WorkMode_TypeDef:TIM1_WorkMode:TIMER1工作模式选择
 110          uint16_t:TIM1_SetCounter:TIMER1计数初值配置
 111          *出口参数:void
 112          **************************************************/
 113          void TIM1_WorkModeConfig(TIM1_WorkMode_TypeDef TIM1_WorkMode, uint16_t TIM1_SetCounter)
 114          {
C51 COMPILER V9.60.0.0   SC95F_TIMER1                                                      10/18/2023 18:03:58 PAGE 3   

 115   1        switch(TIM1_WorkMode)
 116   1        {
 117   2          case TIM1_WORK_MODE0:
 118   2            TIM1_WorkMode0Config(TIM1_SetCounter);
 119   2            break;
 120   2      
 121   2          case TIM1_WORK_MODE1:
 122   2            TIM1_WorkMode1Config(TIM1_SetCounter);
 123   2            break;
 124   2      
 125   2          case TIM1_WORK_MODE2:
 126   2            TIM1_WorkMode2Config(TIM1_SetCounter);
 127   2            break;
 128   2      
 129   2          default:
 130   2            break;
 131   2        }
 132   1      }
 133          
 134          /**************************************************
 135          *函数名称:void TIM1_Mode0SetReloadCounter(uint16_t TIM1_SetCounter)
 136          *函数功能:TIMER1工作模式0初值重载函数
 137          *入口参数:
 138          uint16_t:TIM1_SetCounter:配置TIMER1重载值
 139          *出口参数:void
 140          **************************************************/
 141          void TIM1_Mode0SetReloadCounter(uint16_t TIM1_SetCounter)
 142          {
 143   1        TL1 = (uint8_t)TIM1_SetCounter;
 144   1        TH1 = (TIM1_SetCounter >> 5);
 145   1      }
 146          
 147          /**************************************************
 148          *函数名称:void TIM1_Mode1SetReloadCounter(uint16_t TIM1_SetCounter)
 149          *函数功能:TIMER1工作模式1初值重载函数
 150          *入口参数:
 151          uint16_t:TIM1_SetCounter:配置TIMER1重载值
 152          *出口参数:void
 153          **************************************************/
 154          void TIM1_Mode1SetReloadCounter(uint16_t TIM1_SetCounter)
 155          {
 156   1        TL1 = TIM1_SetCounter % 256;
 157   1        TH1 = TIM1_SetCounter / 256;
 158   1      }
 159          
 160          /*****************************************************
 161          *函数名称:void TIM1_Cmd(FunctionalState NewState)
 162          *函数功能:TIMER1功能开关函数
 163          *入口参数:
 164          FunctionalState:NewState:功能启动/关闭选择
 165          *出口参数:void
 166          *****************************************************/
 167          void TIM1_Cmd(FunctionalState NewState)
 168          {
 169   1        if(NewState == DISABLE)
 170   1        {
 171   2          TR1 = 0;
 172   2        }
 173   1        else
 174   1        {
 175   2          TR1 = 1;
 176   2        }
C51 COMPILER V9.60.0.0   SC95F_TIMER1                                                      10/18/2023 18:03:58 PAGE 4   

 177   1      }
 178          
 179          /*****************************************************
 180          *函数名称:void TIM1_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 181          *函数功能:TIMER1中断初始化
 182          *入口参数:
 183          FunctionalState:NewState:中断使能/关闭选择
 184          PriorityStatus:Priority:中断优先级选择
 185          *出口参数:void
 186          *****************************************************/
 187          void TIM1_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 188          {
 189   1        if(NewState == DISABLE)
 190   1        {
 191   2          ET1 = 0;
 192   2        }
 193   1        else
 194   1        {
 195   2          ET1 = 1;
 196   2        }
 197   1      
 198   1        /************************************************************/
 199   1        if(Priority == LOW)
 200   1        {
 201   2          IPT1 = 0;
 202   2        }
 203   1        else
 204   1        {
 205   2          IPT1 = 1;
 206   2        }
 207   1      }
 208          
 209          
 210          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
