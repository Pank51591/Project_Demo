C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SC95F_GPIO
OBJECT MODULE PLACED IN ..\Output\sc95f_gpio.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_gpio.c LARGE OBJECTADVA
                    -NCED OPTIMIZE(9,SIZE) BROWSE INCDIR(..\FWLib\SC95F_Lib\inc;..\User;..\User\Funtion;..\SOC_DebugTouchKey_Lib;..\SOC_Debug
                    -TouchKey_Lib) DEFINE(SC95F8x1xB) DEBUG PRINT(..\List\sc95f_gpio.lst) TABS(2) OBJECT(..\Output\sc95f_gpio.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //  文件名称: sc95f_gpio.c
   4          //  作者:
   5          //  模块功能: GPIO固件库函数C文件
   6          //  最后更正日期: 2022/04/02
   7          //  版本: V1.10005
   8          //  说明: 该文件仅适用于SC95F系列芯片
   9          //*************************************************************
  10          
  11          #include "sc95f_gpio.h"
  12          
  13          /**************************************************
  14          *函数名称:void GPIO_DeInit(void)
  15          *函数功能:GPIO相关寄存器复位至缺省值
  16          *入口参数:void
  17          *出口参数:void
  18          **************************************************/
  19          void GPIO_DeInit(void)
  20          {
  21   1      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC92FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)  || defined (SC95F8x1xB) || defined (SC95F7x1xB)
  22   1        P0CON = 0x00;
  23   1        P1CON = 0x00;
  24   1        P2CON = 0x00;
  25   1        P3CON = 0x00;
  26   1        P4CON = 0x00;
  27   1        P5CON = 0x00;
  28   1        P0PH = 0x00;
  29   1        P1PH = 0x00;
  30   1        P2PH = 0x00;
  31   1        P3PH = 0x00;
  32   1        P4PH = 0x00;
  33   1        P5PH = 0x00;
  34   1        P0 = P1 = P2 = P3 = P4 = P5 = 0;
  35   1      #endif
  36   1      #if defined(SC95F8x2x) || defined(SC95F7x2x)
                P0CON = 0x00;
                P1CON = 0x00;
                P2CON = 0x00;
                P5CON = 0x00;
                P0PH = 0x00;
                P1PH = 0x00;
                P2PH = 0x00;
                P5PH = 0x00;
                P0 = P1 = P2 = P5 = 0;
              #endif
  47   1      }
  48          
  49          /**************************************************
  50          *函数名称:void GPIO_Init(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  51          *函数功能:GPIO口配置初始化
  52          *入口参数:
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 2   

  53          GPIO_TypeDef:GPIOx:待操作的GPIO口
  54          GPIO_Pin_TypeDef:PortPins:GPIO管脚Pxy（uint8_t作为入参，方便进行位或操作）
  55          GPIO_Mode_TypeDef:GPIO_Mode:GPIO口模式（高阻输入、上拉输入、推挽输出）
  56          *出口参数:void
  57          **************************************************/
  58          void GPIO_Init(GPIO_TypeDef GPIOx, uint8_t PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  59          {
  60   1        /* 选择需要操作的GPIO */
  61   1        switch(GPIOx)
  62   1        {
  63   2          case GPIO0:
  64   2          {
  65   3            switch(GPIO_Mode)
  66   3            {
  67   4              /* 配置IO为高阻输入模式 */
  68   4              case GPIO_MODE_IN_HI:     
  69   4                P0CON &= ~PortPins;
  70   4                P0PH &= ~PortPins;
  71   4              break;
  72   4              /* 配置IO为上拉输入模式 */
  73   4              case GPIO_MODE_IN_PU:
  74   4                P0CON &= ~PortPins;
  75   4                P0PH |= PortPins;
  76   4              break;
  77   4              /* 配置IO为推挽输出模式 */
  78   4              case GPIO_MODE_OUT_PP:
  79   4                P0CON |= PortPins;
  80   4              break;
  81   4              default: 
  82   4              break;
  83   4            }
  84   3          }
  85   2          break;
  86   2          case GPIO1:
  87   2          {
  88   3            switch(GPIO_Mode)
  89   3            {
  90   4              /* 配置IO为高阻输入模式 */
  91   4              case GPIO_MODE_IN_HI:
  92   4                P1CON &= ~PortPins;
  93   4                P1PH &= ~PortPins;
  94   4              break;
  95   4              /* 配置IO为上拉输入模式 */
  96   4              case GPIO_MODE_IN_PU:
  97   4                P1CON &= ~PortPins;
  98   4                P1PH |= PortPins;
  99   4              break;
 100   4              /* 配置IO为推挽输出模式 */
 101   4              case GPIO_MODE_OUT_PP:
 102   4                P1CON |= PortPins;
 103   4              break;
 104   4              default: 
 105   4              break;
 106   4            }
 107   3          }
 108   2          break;
 109   2          case GPIO2:
 110   2          {
 111   3            switch(GPIO_Mode)
 112   3            {
 113   4              /* 配置IO为高阻输入模式 */
 114   4              case GPIO_MODE_IN_HI:
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 3   

 115   4                P2CON &= ~PortPins;
 116   4                P2PH &= ~PortPins;
 117   4              break;
 118   4              /* 配置IO为上拉输入模式 */
 119   4              case GPIO_MODE_IN_PU:
 120   4                P2CON &= ~PortPins;
 121   4                P2PH |= PortPins;
 122   4              break;
 123   4              /* 配置IO为推挽输出模式 */
 124   4              case GPIO_MODE_OUT_PP:
 125   4                P2CON |= PortPins;
 126   4              break;
 127   4              default: 
 128   4              break;
 129   4            }
 130   3          }
 131   2          break;
 132   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 133   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 134   2          case GPIO3:
 135   2          {
 136   3            switch(GPIO_Mode)
 137   3            {
 138   4              /* 配置IO为高阻输入模式 */
 139   4              case GPIO_MODE_IN_HI:
 140   4                P3CON &= ~PortPins;
 141   4                P3PH &= ~PortPins;
 142   4              break;
 143   4              /* 配置IO为上拉输入模式 */
 144   4              case GPIO_MODE_IN_PU:
 145   4                P3CON &= ~PortPins;
 146   4                P3PH |= PortPins;
 147   4              break;
 148   4              /* 配置IO为推挽输出模式 */
 149   4              case GPIO_MODE_OUT_PP:
 150   4                P3CON |= PortPins;
 151   4              break;
 152   4              default: 
 153   4              break;
 154   4            }
 155   3          }
 156   2          break;
 157   2          case GPIO4:
 158   2          {
 159   3            switch(GPIO_Mode)
 160   3            {
 161   4              /* 配置IO为高阻输入模式 */
 162   4              case GPIO_MODE_IN_HI:
 163   4                P4CON &= ~PortPins;
 164   4                P4PH &= ~PortPins;
 165   4              break;
 166   4              /* 配置IO为上拉输入模式 */
 167   4              case GPIO_MODE_IN_PU:
 168   4                P4CON &= ~PortPins;
 169   4                P4PH |= PortPins;
 170   4              break;
 171   4              /* 配置IO为推挽输出模式 */
 172   4              case GPIO_MODE_OUT_PP:
 173   4                P4CON |= PortPins;
 174   4              break;
 175   4              default: 
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 4   

 176   4              break;
 177   4            }
 178   3          }
 179   2          break;
 180   2      #endif
 181   2          case GPIO5:
 182   2          {
 183   3            switch(GPIO_Mode)
 184   3            {
 185   4              /* 配置IO为高阻输入模式 */
 186   4              case GPIO_MODE_IN_HI:
 187   4                P5CON &= ~PortPins;
 188   4                P5PH &= ~PortPins;
 189   4              break;
 190   4              /* 配置IO为上拉输入模式 */
 191   4              case GPIO_MODE_IN_PU:
 192   4                P5CON &= ~PortPins;
 193   4                P5PH |= PortPins;
 194   4              break;
 195   4              /* 配置IO为推挽输出模式 */
 196   4              case GPIO_MODE_OUT_PP:
 197   4                P5CON |= PortPins;
 198   4              break;
 199   4              default: 
 200   4              break;
 201   4            }
 202   3          }
 203   2          break;
 204   2          default: 
 205   2          break;
 206   2        }
 207   1      }
 208          
 209          /**************************************************
 210          *函数名称:void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 211          *函数功能:GPIO口赋值
 212          *入口参数:
 213          GPIO_TypeDef:GPIOx:待操作的GPIO口
 214          uint8_t:PortVal:GPIO口的值
 215          *出口参数:void
 216          **************************************************/
 217          void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 218          {
 219   1        /* 选择需要操作的GPIO */
 220   1        switch(GPIOx)
 221   1        {
 222   2          case GPIO0:
 223   2            P0 = PortVal;
 224   2          break;
 225   2          case GPIO1:
 226   2            P1 = PortVal;
 227   2          break;
 228   2          case GPIO2:
 229   2            P2 = PortVal;
 230   2          break;
 231   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 232   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 233   2          case GPIO3:
 234   2            P3 = PortVal;
 235   2          break;
 236   2          case GPIO4:
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 5   

 237   2            P4 = PortVal;
 238   2          break;
 239   2      #endif
 240   2          case GPIO5:
 241   2            P5 = PortVal;
 242   2          break;
 243   2          default: 
 244   2          break;
 245   2        }
 246   1      }
 247          
 248          /**************************************************
 249          *函数名称:void GPIO_WriteHigh(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 250          *函数功能:GPIO口管脚Pxy置位
 251          *入口参数:
 252          GPIO_TypeDef:GPIOx:待操作的GPIO口
 253          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 254          *出口参数:void
 255          **************************************************/
 256          void GPIO_WriteHigh(GPIO_TypeDef GPIOx, uint8_t PortPins)
 257          {
 258   1        /* 选择需要操作的GPIO */
 259   1          switch(GPIOx)
 260   1        {
 261   2          case GPIO0:
 262   2            P0 |= PortPins;
 263   2          break;
 264   2          case GPIO1:
 265   2            P1 |= PortPins;
 266   2          break;
 267   2          case GPIO2:
 268   2            P2 |= PortPins;
 269   2          break;
 270   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 271   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 272   2          case GPIO3:
 273   2            P3 |= PortPins;
 274   2          break;
 275   2          case GPIO4:
 276   2            P4 |= PortPins;
 277   2          break;
 278   2      #endif
 279   2          case GPIO5:
 280   2            P5 |= PortPins;
 281   2          break;
 282   2          default: 
 283   2          break;
 284   2        }
 285   1      }
 286          
 287          /**************************************************
 288          *函数名称:void GPIO_WriteLow(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 289          *函数功能:GPIO口管脚Pxy复位
 290          *入口参数:
 291          GPIO_TypeDef:GPIOx:待操作的GPIO口
 292          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 293          *出口参数:void
 294          **************************************************/
 295          void GPIO_WriteLow(GPIO_TypeDef GPIOx, uint8_t PortPins)
 296          {
 297   1        /* 选择需要操作的GPIO */
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 6   

 298   1          switch(GPIOx)
 299   1        {
 300   2          case GPIO0:
 301   2            P0 &= ~PortPins;
 302   2          break;
 303   2          case GPIO1:
 304   2            P1 &= ~PortPins;
 305   2          break;
 306   2          case GPIO2:
 307   2            P2 &= ~PortPins;
 308   2          break;
 309   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 310   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 311   2          case GPIO3:
 312   2            P3 &= ~PortPins;
 313   2          break;
 314   2          case GPIO4:
 315   2            P4 &= ~PortPins;
 316   2          break;
 317   2      #endif
 318   2          case GPIO5:
 319   2            P5 &= ~PortPins;
 320   2          break;
 321   2          default: 
 322   2          break;
 323   2        }
 324   1      }
 325          
 326          /**************************************************
 327          *函数名称:uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 328          *函数功能:读GPIO口Px的值
 329          *入口参数:
 330          GPIO_TypeDef:GPIOx:待操作的GPIO口
 331          *出口参数:
 332          uint8_t:返回Px的值
 333          **************************************************/
 334          uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 335          {
 336   1        /* 选择需要操作的GPIO */
 337   1        switch(GPIOx)
 338   1        {
 339   2          case GPIO0:
 340   2            return P0;
 341   2          case GPIO1:
 342   2            return P0;
 343   2          case GPIO2:
 344   2            return P0;
 345   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 346   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 347   2          case GPIO3:
 348   2            return P0;
 349   2          case GPIO4:
 350   2            return P0;
 351   2      #endif
 352   2          case GPIO5:
 353   2            return P0;
 354   2          default: 
 355   2            return 0;
 356   2        }
 357   1      }
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 7   

 358          
 359          /**************************************************
 360          *函数名称:BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 361          *函数功能:读GPIO口管脚Pxy的值
 362          *入口参数:
 363          GPIO_TypeDef:GPIOx:待操作的GPIO口
 364          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy（uint8_t作为入参，方便进行位或操作）
 365          *出口参数:
 366          BitStatus:返回Pxy的值
 367          **************************************************/
 368          BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 369          {
 370   1        /* 选择需要操作的GPIO */
 371   1        switch(GPIOx)
 372   1        {
 373   2          case GPIO0:
 374   2            return (P0 & PortPins);
 375   2          case GPIO1:
 376   2            return (P1 & PortPins);
 377   2          case GPIO2:
 378   2            return (P2 & PortPins);
 379   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) || defined(SC95F8x3x) || defined(SC95F7x
             -3x) || defined (SC95F8x6x) || defined (SC95F7x6x)\
 380   2          || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 381   2          case GPIO3:
 382   2            return (P3 & PortPins);
 383   2          case GPIO4:
 384   2            return (P4 & PortPins);
 385   2      #endif
 386   2          case GPIO5:
 387   2            return (P5 & PortPins);
 388   2          default: 
 389   2            return 0;
 390   2        }
 391   1      }
 392          
 393          /**************************************************
 394          *函数名称:void GPIO_IOH_Config(GPIO_TypeDef GPIOx, uint8_t PortPins,GPIO_IOH_Grade_TypeDef GPIO_IOH_Grade)
 395          *函数功能:设置GPIO口管脚IOH输出能力
 396          *入口参数:
 397          GPIO_TypeDef:GPIOx:待操作的GPIO口
 398          GPIO_Pin_TypeDef:PortPins:选择GPIO口管脚Pxy
 399          GPIO_IOH_Grade_TypeDef:GPIO_IOH_Grade:选择IOH的输出等级
 400          *出口参数:void
 401          **************************************************/
 402          void GPIO_IOH_Config(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_IOH_Grade_TypeDef GPIO_IOH_Grade)
 403          {
 404   1        /* 选择需要操作的GPIO */
 405   1        switch (GPIOx)
 406   1        {
 407   2        case GPIO0:
 408   2          if (PortPins == GPIO_PIN_LNIB)
 409   2          {
 410   3            IOHCON0 &= 0xFC;
 411   3            IOHCON0 |= GPIO_IOH_Grade;
 412   3          }
 413   2          else if (PortPins == GPIO_PIN_HNIB)
 414   2          {
 415   3            IOHCON0 &= 0xF3;
 416   3            IOHCON0 |= GPIO_IOH_Grade << 2;
 417   3          }
 418   2          break;
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 8   

 419   2        case GPIO1:
 420   2          if (PortPins == GPIO_PIN_LNIB)
 421   2          {
 422   3            IOHCON0 &= 0xCF;
 423   3            IOHCON0 |= GPIO_IOH_Grade << 4;
 424   3          }
 425   2          else if (PortPins == GPIO_PIN_HNIB)
 426   2          {
 427   3            IOHCON0 &= 0x3F;
 428   3            IOHCON0 |= GPIO_IOH_Grade << 6;
 429   3          }
 430   2          break;
 431   2        case GPIO2:
 432   2          if (PortPins == GPIO_PIN_LNIB)
 433   2          {
 434   3            IOHCON1 &= 0xFC;
 435   3            IOHCON1 |= GPIO_IOH_Grade;
 436   3          }
 437   2          else if (PortPins == GPIO_PIN_HNIB)
 438   2          {
 439   3            IOHCON1 &= 0xF3;
 440   3            IOHCON1 |= GPIO_IOH_Grade << 2;
 441   3          }
 442   2          break;
 443   2      #if defined(SC95F8x1x) || defined(SC95F7x1x) || defined(SC95FWxx) ||defined(SC95F8x3x) || defined(SC95F7x3
             -x) || defined (SC95F8x6x) || defined (SC95F7x6x)  || defined (SC95F8x1xB) || defined (SC95F7x1xB)
 444   2        case GPIO3:
 445   2          if (PortPins == GPIO_PIN_LNIB)
 446   2          {
 447   3            IOHCON1 &= 0xCF;
 448   3            IOHCON1 |= GPIO_IOH_Grade << 4;
 449   3          }
 450   2          break;
 451   2      #elif defined(SC95F8x2x) || defined(SC95F7x2x)
                case GPIO5:
                  if (PortPins == GPIO_PIN_LNIB)
                  {
                    IOHCON1 &= 0xCF;
                    IOHCON1 |= GPIO_IOH_Grade << 4;
                  }
                  break;
              #endif
 460   2        default:
 461   2          break;
 462   2        }
 463   1      }
 464          
 465          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    768    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.60.0.0   SC95F_GPIO                                                        10/13/2023 17:22:47 PAGE 9   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
