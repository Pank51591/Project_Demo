<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\Update.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\Update.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Sep 21 17:27:10 2023
<BR><P>
<H3>Maximum Stack Usage =       1376 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; USB_HostMsdTask &rArr; USB_HostMsdFatfsUserReadWrite &rArr; USB_HostMsdFatfsListDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[a6]">USB_HostHubGetTotalThinkTime</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a5]">USB_HostHelperGetPeripheralInformation</a><BR>
 <LI><a href="#[b1]">USB_HostHubDeviceEvent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9d]">USB_HostDetachDeviceInternal</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1e]">CAN1_RX_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[43]">COMP1_2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[40]">DMA2_Channel4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[41]">DMA2_Channel5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[42]">ETH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1f]">EXTI9_5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1d]">FlashCache_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[28]">I2C2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[44]">OTG_FS_IRQHandler</a> from app.o(i.OTG_FS_IRQHandler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[30]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[f]">RCC_CRS_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[36]">SDIO_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from delay.o(i.SysTick_Handler) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[49]">SystemInit</a> from system_mm32f327x.o(i.SystemInit) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[20]">TIM1_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[23]">TIM1_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[22]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[21]">TIM1_UP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[24]">TIM2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[25]">TIM3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[26]">TIM4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[31]">TIM8_BRK_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[34]">TIM8_CC_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[33]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[32]">TIM8_UP_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2c]">UART2_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[2d]">UART3_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[47]">UART8_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[5a]">USB_HostEnumerationTransferCallback</a> from usb_host_devices.o(i.USB_HostEnumerationTransferCallback) referenced from usb_host_devices.o(i.USB_HostProcessState)
 <LI><a href="#[4b]">USB_HostEvent</a> from app.o(i.USB_HostEvent) referenced from app.o(i.USB_HostApplicationInit)
 <LI><a href="#[4c]">USB_HostHubControlCallback</a> from usb_host_hub.o(i.USB_HostHubControlCallback) referenced from usb_host_hub.o(i.USB_HostHubClassRequestCommon)
 <LI><a href="#[4d]">USB_HostHubControlCallback</a> from usb_host_hub_app.o(i.USB_HostHubControlCallback) referenced from usb_host_hub_app.o(i.USB_HostHubDeviceEvent)
 <LI><a href="#[4d]">USB_HostHubControlCallback</a> from usb_host_hub_app.o(i.USB_HostHubControlCallback) referenced from usb_host_hub_app.o(i.USB_HostHubProcess)
 <LI><a href="#[4d]">USB_HostHubControlCallback</a> from usb_host_hub_app.o(i.USB_HostHubControlCallback) referenced from usb_host_hub_app.o(i.USB_HostHubProcessData)
 <LI><a href="#[4d]">USB_HostHubControlCallback</a> from usb_host_hub_app.o(i.USB_HostHubControlCallback) referenced from usb_host_hub_app.o(i.USB_HostHubProcessPortAttach)
 <LI><a href="#[4d]">USB_HostHubControlCallback</a> from usb_host_hub_app.o(i.USB_HostHubControlCallback) referenced from usb_host_hub_app.o(i.USB_HostHubProcessPortDetach)
 <LI><a href="#[4f]">USB_HostHubInPipeCallback</a> from usb_host_hub.o(i.USB_HostHubInPipeCallback) referenced from usb_host_hub.o(i.USB_HostHubInterruptRecv)
 <LI><a href="#[4e]">USB_HostHubInterruptInCallback</a> from usb_host_hub_app.o(i.USB_HostHubInterruptInCallback) referenced from usb_host_hub_app.o(i.USB_HostHubGetInterruptStatus)
 <LI><a href="#[64]">USB_HostKciIoctl</a> from usb_host_khci.o(i.USB_HostKciIoctl) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[61]">USB_HostKhciClosePipe</a> from usb_host_khci.o(i.USB_HostKhciClosePipe) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[5e]">USB_HostKhciCreate</a> from usb_host_khci.o(i.USB_HostKhciCreate) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[5f]">USB_HostKhciDestory</a> from usb_host_khci.o(i.USB_HostKhciDestory) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[60]">USB_HostKhciOpenPipe</a> from usb_host_khci.o(i.USB_HostKhciOpenPipe) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[63]">USB_HostKhciReadpipe</a> from usb_host_khci.o(i.USB_HostKhciReadpipe) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[62]">USB_HostKhciWritePipe</a> from usb_host_khci.o(i.USB_HostKhciWritePipe) referenced from usb_host_hci.o(.constdata)
 <LI><a href="#[55]">USB_HostMsdCbwCallback</a> from usb_host_msd.o(i.USB_HostMsdCbwCallback) referenced from usb_host_msd.o(i.USB_HostMsdProcessCommand)
 <LI><a href="#[50]">USB_HostMsdClearHaltCallback</a> from usb_host_msd.o(i.USB_HostMsdClearHaltCallback) referenced from usb_host_msd.o(i.USB_HostMsdCbwCallback)
 <LI><a href="#[50]">USB_HostMsdClearHaltCallback</a> from usb_host_msd.o(i.USB_HostMsdClearHaltCallback) referenced from usb_host_msd.o(i.USB_HostMsdCswCallback)
 <LI><a href="#[50]">USB_HostMsdClearHaltCallback</a> from usb_host_msd.o(i.USB_HostMsdClearHaltCallback) referenced from usb_host_msd.o(i.USB_HostMsdDataCallback)
 <LI><a href="#[59]">USB_HostMsdControlCallback</a> from host_msd_fatfs.o(i.USB_HostMsdControlCallback) referenced from host_msd_fatfs.o(i.USB_HostMsdTask)
 <LI><a href="#[57]">USB_HostMsdCswCallback</a> from usb_host_msd.o(i.USB_HostMsdCswCallback) referenced from usb_host_msd.o(i.USB_HostMsdProcessCommand)
 <LI><a href="#[56]">USB_HostMsdDataCallback</a> from usb_host_msd.o(i.USB_HostMsdDataCallback) referenced from usb_host_msd.o(i.USB_HostMsdProcessCommand)
 <LI><a href="#[54]">USB_HostMsdMassResetCallback</a> from usb_host_msd.o(i.USB_HostMsdMassResetCallback) referenced from usb_host_msd.o(i.USB_HostMsdMassStorageReset)
 <LI><a href="#[52]">USB_HostMsdMassResetClearInCallback</a> from usb_host_msd.o(i.USB_HostMsdMassResetClearInCallback) referenced from usb_host_msd.o(i.USB_HostMsdMassResetCallback)
 <LI><a href="#[53]">USB_HostMsdMassResetClearOutCallback</a> from usb_host_msd.o(i.USB_HostMsdMassResetClearOutCallback) referenced from usb_host_msd.o(i.USB_HostMsdMassResetClearInCallback)
 <LI><a href="#[58]">USB_HostMsdSetInterfaceCallback</a> from usb_host_msd.o(i.USB_HostMsdSetInterfaceCallback) referenced from usb_host_msd.o(i.USB_HostMsdSetInterface)
 <LI><a href="#[51]">USB_HostMsdUfiCallback</a> from fsl_usb_disk_bm.o(i.USB_HostMsdUfiCallback) referenced from fsl_usb_disk_bm.o(i.USB_HostMsdInitializeDisk)
 <LI><a href="#[51]">USB_HostMsdUfiCallback</a> from fsl_usb_disk_bm.o(i.USB_HostMsdUfiCallback) referenced from fsl_usb_disk_bm.o(i.USB_HostMsdIoctlDisk)
 <LI><a href="#[51]">USB_HostMsdUfiCallback</a> from fsl_usb_disk_bm.o(i.USB_HostMsdUfiCallback) referenced from fsl_usb_disk_bm.o(i.USB_HostMsdReadDisk)
 <LI><a href="#[51]">USB_HostMsdUfiCallback</a> from fsl_usb_disk_bm.o(i.USB_HostMsdUfiCallback) referenced from fsl_usb_disk_bm.o(i.USB_HostMsdWriteDisk)
 <LI><a href="#[5d]">USB_HostProcessCallback</a> from usb_host_devices.o(i.USB_HostProcessCallback) referenced 4 times from usb_host_devices.o(.constdata)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_mm32f327x_keil.o(.text) referenced from startup_mm32f327x_keil.o(RESET)
 <LI><a href="#[4a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f327x_keil.o(.text)
 <LI><a href="#[5c]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[5b]">fputc</a> from uart.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[48]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[13b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[65]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[13d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[13e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[13f]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[140]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[141]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f327x_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[142]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[143]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[144]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>AutoCalPllFactor</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, system_mm32f327x.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AutoCalPllFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[ec]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[6b]"></a>FLASH_ErasePage</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[6d]"></a>FLASH_GetStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[ed]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[eb]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[6c]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[72]"></a>GPIO_Init</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VBUS_CTR_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[71]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[74]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VBUS_CTR_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[73]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[70]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VBUS_CTR_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[6e]"></a>LED_Init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OTG_FS_IRQHandler &rArr; USB_HostKhciIsrFunction &rArr; USB_OsaEventSet
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciIsrFunction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VBUS_CTR_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[81]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[76]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[78]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[79]"></a>RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, hal_rcc.o(i.RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[77]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelayDecrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f327x_keil.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>UART1_GPIO_Init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, uart.o(i.UART1_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART1_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[80]"></a>UART1_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, uart.o(i.UART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART1_Init &rArr; UART_Init &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[83]"></a>UART_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init &rArr; RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[82]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[85]"></a>USB_HostApplicationInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app.o(i.USB_HostApplicationInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_HostApplicationInit &rArr; USB_HostInit &rArr; USB_HostGetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostIsrEnable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>USB_HostAttachDevice</STRONG> (Thumb, 394 bytes, Stack size 56 bytes, usb_host_devices.o(i.USB_HostAttachDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenPipe
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubPort
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubNumber
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAllocateDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAttach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
</UL>

<P><STRONG><a name="[9e]"></a>USB_HostCancelTransfer</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, usb_host_hci.o(i.USB_HostCancelTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_HostCancelTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetInterface
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeinit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
</UL>

<P><STRONG><a name="[93]"></a>USB_HostCh9RequestCommon</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, usb_host_framework.o(i.USB_HostCh9RequestCommon))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_HostCh9RequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostStandardSetGetDescriptor
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostStandardSetAddress
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
</UL>

<P><STRONG><a name="[86]"></a>USB_HostClockInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app.o(i.USB_HostClockInit))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostApplicationInit
</UL>

<P><STRONG><a name="[96]"></a>USB_HostCloseDeviceInterface</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, usb_host_devices.o(i.USB_HostCloseDeviceInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostCloseDeviceInterface &rArr; USB_HostReleaseDeviceResource &rArr; USB_HostCancelTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostValidateDevice
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRemoveDeviceInstance
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeinit
</UL>

<P><STRONG><a name="[b0]"></a>USB_HostClosePipe</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostClosePipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostClosePipe
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetInterface
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeinit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdOpenInterface
</UL>

<P><STRONG><a name="[9c]"></a>USB_HostDetachDevice</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usb_host_devices.o(i.USB_HostDetachDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = USB_HostDetachDevice &rArr; USB_HostDetachDeviceInternal &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDetach
</UL>

<P><STRONG><a name="[9d]"></a>USB_HostDetachDeviceInternal</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, usb_host_devices.o(i.USB_HostDetachDeviceInternal))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = USB_HostDetachDeviceInternal &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRemoveDeviceInstance
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostNotifyDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDevice
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
</UL>

<P><STRONG><a name="[95]"></a>USB_HostFreeTransfer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usb_host_hci.o(i.USB_HostFreeTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostFreeTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptRecv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInPipeCallback
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubControlCallback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCh9RequestCommon
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostEnumerationTransferCallback
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterfaceCallback
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetClearOutCallback
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetClearInCallback
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetCallback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdControl
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>

<P><STRONG><a name="[a5]"></a>USB_HostHelperGetPeripheralInformation</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostHelperGetPeripheralInformation))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetTotalThinkTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdEvent
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAtomNonblockingTransaction
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetTotalThinkTime
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubPort
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubNumber
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[a9]"></a>USB_HostHubClearFeature</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, usb_host_hub.o(i.USB_HostHubClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_HostHubClearFeature &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[aa]"></a>USB_HostHubClearPortFeature</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, usb_host_hub.o(i.USB_HostHubClearPortFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostHubClearPortFeature &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
</UL>

<P><STRONG><a name="[4d]"></a>USB_HostHubControlCallback</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubControlCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = USB_HostHubControlCallback &rArr; USB_HostHubProcessPort &rArr; USB_HostHubProcessPortAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPort
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Address Reference Count : 5]<UL><LI> usb_host_hub_app.o(i.USB_HostHubProcessData)
<LI> usb_host_hub_app.o(i.USB_HostHubProcessPortAttach)
<LI> usb_host_hub_app.o(i.USB_HostHubProcessPortDetach)
<LI> usb_host_hub_app.o(i.USB_HostHubDeviceEvent)
<LI> usb_host_hub_app.o(i.USB_HostHubProcess)
</UL>
<P><STRONG><a name="[af]"></a>USB_HostHubDeinit</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, usb_host_hub.o(i.USB_HostHubDeinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_HostHubDeinit &rArr; USB_HostCloseDeviceInterface &rArr; USB_HostReleaseDeviceResource &rArr; USB_HostCancelTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClosePipe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[b1]"></a>USB_HostHubDeviceEvent</STRONG> (Thumb, 508 bytes, Stack size 80 bytes, usb_host_hub_app.o(i.USB_HostHubDeviceEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetInterface
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeinit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexDestroy
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexCreate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostNotifyDevice
</UL>

<P><STRONG><a name="[b6]"></a>USB_HostHubGetDescriptor</STRONG> (Thumb, 42 bytes, Stack size 48 bytes, usb_host_hub.o(i.USB_HostHubGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostHubGetDescriptor &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[8c]"></a>USB_HostHubGetHsHubNumber</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubGetHsHubNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostHubGetHsHubNumber &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
</UL>

<P><STRONG><a name="[8d]"></a>USB_HostHubGetHsHubPort</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubGetHsHubPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostHubGetHsHubPort &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
</UL>

<P><STRONG><a name="[b8]"></a>USB_HostHubGetPortStatus</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, usb_host_hub.o(i.USB_HostHubGetPortStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostHubGetPortStatus &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
</UL>

<P><STRONG><a name="[b9]"></a>USB_HostHubGetStatus</STRONG> (Thumb, 42 bytes, Stack size 48 bytes, usb_host_hub.o(i.USB_HostHubGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostHubGetStatus &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessData
</UL>

<P><STRONG><a name="[a6]"></a>USB_HostHubGetTotalThinkTime</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usb_host_hub_app.o(i.USB_HostHubGetTotalThinkTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
</UL>

<P><STRONG><a name="[b3]"></a>USB_HostHubInit</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, usb_host_hub.o(i.USB_HostHubInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostHubInit &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[4e]"></a>USB_HostHubInterruptInCallback</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubInterruptInCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = USB_HostHubInterruptInCallback &rArr; USB_HostHubProcessData &rArr; USB_HostHubProcessPort &rArr; USB_HostHubProcessPortAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessData
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hub_app.o(i.USB_HostHubGetInterruptStatus)
</UL>
<P><STRONG><a name="[b7]"></a>USB_HostHubInterruptRecv</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usb_host_hub.o(i.USB_HostHubInterruptRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostHubInterruptRecv &rArr; USB_HostRecv
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRecv
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
</UL>

<P><STRONG><a name="[b4]"></a>USB_HostHubSetInterface</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, usb_host_hub.o(i.USB_HostHubSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_HostHubSetInterface &rArr; USB_HostCancelTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenPipe
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClosePipe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenDeviceInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[bc]"></a>USB_HostHubSetPortFeature</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, usb_host_hub.o(i.USB_HostHubSetPortFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostHubSetPortFeature &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[87]"></a>USB_HostInit</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, usb_host_hci.o(i.USB_HostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostInit &rArr; USB_HostGetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexDestroy
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexCreate
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseInstance
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostGetInstance
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostGetControllerInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostApplicationInit
</UL>

<P><STRONG><a name="[88]"></a>USB_HostIsrEnable</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app.o(i.USB_HostIsrEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostIsrEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostApplicationInit
</UL>

<P><STRONG><a name="[64]"></a>USB_HostKciIoctl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usb_host_khci.o(i.USB_HostKciIoctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostKciIoctl &rArr; _USB_HostKhciBusControl &rArr; _USB_HostKhciDelay &rArr; _USB_HostKhciGetFrameCountSum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCount
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDelay
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciCancelPipe
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciBusControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>USB_HostKhciClosePipe</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, usb_host_khci.o(i.USB_HostKhciClosePipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostKhciClosePipe &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>USB_HostKhciCreate</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, usb_host_khci.o(i.USB_HostKhciCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USB_HostKhciCreate &rArr; USB_OsaMemoryAllocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventCreate
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexCreate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciDestory
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>USB_HostKhciDestory</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, usb_host_khci.o(i.USB_HostKhciDestory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_HostKhciDestory &rArr; USB_OsaEventDestroy
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventDestroy
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexDestroy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciCreate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>USB_HostKhciIsrFunction</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, usb_host_khci.o(i.USB_HostKhciIsrFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_HostKhciIsrFunction &rArr; USB_OsaEventSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>USB_HostKhciOpenPipe</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, usb_host_khci.o(i.USB_HostKhciOpenPipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USB_HostKhciOpenPipe &rArr; USB_OsaMemoryAllocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRoundUpPow2
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>USB_HostKhciReadpipe</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, usb_host_khci.o(i.USB_HostKhciReadpipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostKhciReadpipe &rArr; _USB_HostKhciLinkTrRequestToList
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciLinkTrRequestToList
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>USB_HostKhciTaskFunction</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, usb_host_khci.o(i.USB_HostKhciTaskFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventWait
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferClearUp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciReset
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciFinishTranfer
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDetach
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAttach
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostTaskFn
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControllerTaskFunction
</UL>

<P><STRONG><a name="[62]"></a>USB_HostKhciWritePipe</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, usb_host_khci.o(i.USB_HostKhciWritePipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostKhciWritePipe &rArr; _USB_HostKhciLinkTrRequestToList
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciLinkTrRequestToList
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hci.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>USB_HostMallocTransfer</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usb_host_hci.o(i.USB_HostMallocTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostMallocTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInit
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptRecv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdControl
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>

<P><STRONG><a name="[d7]"></a>USB_HostMsdCommand</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, usb_host_msd.o(i.USB_HostMsdCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdWrite10
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTestUnitReady
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdRequestSense
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadCapacity
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdRead10
</UL>

<P><STRONG><a name="[59]"></a>USB_HostMsdControlCallback</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, host_msd_fatfs.o(i.USB_HostMsdControlCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostMsdControlCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> host_msd_fatfs.o(i.USB_HostMsdTask)
</UL>
<P><STRONG><a name="[d9]"></a>USB_HostMsdDeinit</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdDeinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_HostMsdDeinit &rArr; USB_HostCloseDeviceInterface &rArr; USB_HostReleaseDeviceResource &rArr; USB_HostCancelTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClosePipe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
</UL>

<P><STRONG><a name="[a0]"></a>USB_HostMsdEvent</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, host_msd_fatfs.o(i.USB_HostMsdEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_HostMsdEvent &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostEvent
</UL>

<P><STRONG><a name="[12d]"></a>USB_HostMsdGetDiskStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdGetDiskStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[ee]"></a>USB_HostMsdInit</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostMsdInit &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
</UL>

<P><STRONG><a name="[ef]"></a>USB_HostMsdInitializeDisk</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdInitializeDisk))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = USB_HostMsdInitializeDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControllerTaskFunction
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTestUnitReady
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdRequestSense
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[f3]"></a>USB_HostMsdIoctlDisk</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdIoctlDisk))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = USB_HostMsdIoctlDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControllerTaskFunction
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadCapacity
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[d4]"></a>USB_HostMsdMassStorageReset</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, usb_host_msd.o(i.USB_HostMsdMassStorageReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_HostMsdMassStorageReset &rArr; USB_HostMsdControl &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdControl
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDataCallback
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCswCallback
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCbwCallback
</UL>

<P><STRONG><a name="[f7]"></a>USB_HostMsdRead10</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, usb_host_msd_ufi.o(i.USB_HostMsdRead10))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USB_HostMsdRead10 &rArr; USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadDisk
</UL>

<P><STRONG><a name="[f2]"></a>USB_HostMsdReadCapacity</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, usb_host_msd_ufi.o(i.USB_HostMsdReadCapacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USB_HostMsdReadCapacity &rArr; USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdIoctlDisk
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInitializeDisk
</UL>

<P><STRONG><a name="[f8]"></a>USB_HostMsdReadDisk</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdReadDisk))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = USB_HostMsdReadDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControllerTaskFunction
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdRead10
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[f1]"></a>USB_HostMsdRequestSense</STRONG> (Thumb, 70 bytes, Stack size 56 bytes, usb_host_msd_ufi.o(i.USB_HostMsdRequestSense))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USB_HostMsdRequestSense &rArr; USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInitializeDisk
</UL>

<P><STRONG><a name="[f9]"></a>USB_HostMsdSetInterface</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, usb_host_msd.o(i.USB_HostMsdSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USB_HostMsdSetInterface &rArr; USB_HostMsdOpenInterface &rArr; USB_HostOpenPipe
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenDeviceInterface
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdOpenInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
</UL>

<P><STRONG><a name="[fa]"></a>USB_HostMsdTask</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, host_msd_fatfs.o(i.USB_HostMsdTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = USB_HostMsdTask &rArr; USB_HostMsdFatfsUserReadWrite &rArr; USB_HostMsdFatfsListDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInit
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f0]"></a>USB_HostMsdTestUnitReady</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, usb_host_msd_ufi.o(i.USB_HostMsdTestUnitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_HostMsdTestUnitReady &rArr; USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInitializeDisk
</UL>

<P><STRONG><a name="[fb]"></a>USB_HostMsdWrite10</STRONG> (Thumb, 104 bytes, Stack size 64 bytes, usb_host_msd_ufi.o(i.USB_HostMsdWrite10))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USB_HostMsdWrite10 &rArr; USB_HostMsdCommand &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdWriteDisk
</UL>

<P><STRONG><a name="[fc]"></a>USB_HostMsdWriteDisk</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdWriteDisk))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControllerTaskFunction
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdWrite10
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[bf]"></a>USB_HostOpenDeviceInterface</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, usb_host_devices.o(i.USB_HostOpenDeviceInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_HostOpenDeviceInterface
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostValidateDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetInterface
</UL>

<P><STRONG><a name="[91]"></a>USB_HostOpenPipe</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostOpenPipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostOpenPipe
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetInterface
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdOpenInterface
</UL>

<P><STRONG><a name="[bb]"></a>USB_HostRecv</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostRecv
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptRecv
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
</UL>

<P><STRONG><a name="[f6]"></a>USB_HostSend</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
</UL>

<P><STRONG><a name="[94]"></a>USB_HostSendSetup</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostSendSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClassRequestCommon
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCh9RequestCommon
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdControl
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>

<P><STRONG><a name="[ff]"></a>USB_HostStandardSetAddress</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, usb_host_framework.o(i.USB_HostStandardSetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostStandardSetAddress &rArr; USB_HostCh9RequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCh9RequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
</UL>

<P><STRONG><a name="[fe]"></a>USB_HostStandardSetGetDescriptor</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usb_host_framework.o(i.USB_HostStandardSetGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostStandardSetGetDescriptor &rArr; USB_HostCh9RequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCh9RequestCommon
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
</UL>

<P><STRONG><a name="[102]"></a>USB_HostTaskFn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app.o(i.USB_HostTaskFn))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = USB_HostTaskFn &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>USB_HostValidateDevice</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb_host_devices.o(i.USB_HostValidateDevice))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenDeviceInterface
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
</UL>

<P><STRONG><a name="[a3]"></a>USB_OsaEnterCritical</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventWait
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventDestroy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventCreate
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventClear
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciOpenPipe
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciClosePipe
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseInstance
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostGetInstance
</UL>

<P><STRONG><a name="[103]"></a>USB_OsaEventClear</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, usb_osa_bm.o(i.USB_OsaEventClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OsaEventClear
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDetach
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAttach
</UL>

<P><STRONG><a name="[c6]"></a>USB_OsaEventCreate</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, usb_osa_bm.o(i.USB_OsaEventCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OsaEventCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciCreate
</UL>

<P><STRONG><a name="[c7]"></a>USB_OsaEventDestroy</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usb_osa_bm.o(i.USB_OsaEventDestroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OsaEventDestroy
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciDestory
</UL>

<P><STRONG><a name="[c8]"></a>USB_OsaEventSet</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, usb_osa_bm.o(i.USB_OsaEventSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OsaEventSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciIsrFunction
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciReset
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRightTrRequest
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciFinishTranfer
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciWritePipe
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciReadpipe
</UL>

<P><STRONG><a name="[cc]"></a>USB_OsaEventWait</STRONG> (Thumb, 100 bytes, Stack size 36 bytes, usb_osa_bm.o(i.USB_OsaEventWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OsaEventWait
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAtomNonblockingTransaction
</UL>

<P><STRONG><a name="[a4]"></a>USB_OsaExitCritical</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventWait
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventDestroy
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventCreate
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventClear
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciOpenPipe
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciClosePipe
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseInstance
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostGetInstance
</UL>

<P><STRONG><a name="[8a]"></a>USB_OsaMemoryAllocate</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usb_osa_bm.o(i.USB_OsaMemoryAllocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OsaMemoryAllocate &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInit
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciOpenPipe
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciCreate
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessCallback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[8b]"></a>USB_OsaMemoryFree</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usb_osa_bm.o(i.USB_OsaMemoryFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OsaMemoryFree &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDeinit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeinit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciOpenPipe
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciDestory
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciClosePipe
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessCallback
</UL>

<P><STRONG><a name="[b2]"></a>USB_OsaMutexCreate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaMutexCreate))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciCreate
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[b5]"></a>USB_OsaMutexDestroy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaMutexDestroy))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciDestory
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[8e]"></a>USB_OsaMutexLock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaMutexLock))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferClearUp
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciUnlinkTrRequestFromList
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciLinkTrRequestToList
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRightTrRequest
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSend
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRecv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenDeviceInterface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDevice
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceAddress
</UL>

<P><STRONG><a name="[90]"></a>USB_OsaMutexUnlock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_osa_bm.o(i.USB_OsaMutexUnlock))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferClearUp
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciUnlinkTrRequestFromList
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciLinkTrRequestToList
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRightTrRequest
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSend
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRecv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenDeviceInterface
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDevice
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceAddress
</UL>

<P><STRONG><a name="[106]"></a>VBUS_CTR_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, led.o(i.VBUS_CTR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VBUS_CTR_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>_USB_HostKhciTransferClearUp</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, usb_host_khci.o(i._USB_HostKhciTransferClearUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _USB_HostKhciTransferClearUp &rArr; _USB_HostKhciUnlinkTrRequestFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciUnlinkTrRequestFromList
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[d0]"></a>_USB_HostKhciTransferStateMachine</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, usb_host_khci.o(i._USB_HostKhciTransferStateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _USB_HostKhciTransferStateMachine &rArr; _USB_HostKhciStartTranfer &rArr; _USB_HostKhciAtomNonblockingTransaction &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventWait
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciUnlinkTrRequestFromList
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransactionDone
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciStartTranfer
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciProcessTrCallback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRightTrRequest
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCount
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[10d]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[145]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[a1]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostEvent
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsTestDone
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsListDirectory
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsDisplayFileInfo
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdEvent
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransactionDone
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAttach
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciCreate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciClosePipe
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>

<P><STRONG><a name="[10f]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[146]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[e0]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[147]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[148]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[149]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[129]"></a>disk_initialize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = disk_initialize &rArr; USB_HostMsdInitializeDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInitializeDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[12a]"></a>disk_ioctl</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = disk_ioctl &rArr; USB_HostMsdIoctlDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdIoctlDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[12b]"></a>disk_read</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = disk_read &rArr; USB_HostMsdReadDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[12c]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, diskio.o(i.disk_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdGetDiskStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[124]"></a>disk_write</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdWriteDisk
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
</UL>

<P><STRONG><a name="[e5]"></a>f_close</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e2]"></a>f_getfree</STRONG> (Thumb, 246 bytes, Stack size 72 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = f_getfree &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e4]"></a>f_lseek</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e1]"></a>f_mount</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = f_mount &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e3]"></a>f_open</STRONG> (Thumb, 494 bytes, Stack size 104 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[dc]"></a>f_opendir</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsListDirectory
</UL>

<P><STRONG><a name="[e6]"></a>f_read</STRONG> (Thumb, 412 bytes, Stack size 72 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[dd]"></a>f_readdir</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsListDirectory
</UL>

<P><STRONG><a name="[ea]"></a>f_stat</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, ff.o(i.f_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = f_stat &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e8]"></a>f_sync</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e9]"></a>f_utime</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, ff.o(i.f_utime))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = f_utime &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[e7]"></a>f_write</STRONG> (Thumb, 478 bytes, Stack size 64 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[5b]"></a>fputc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[105]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
</UL>

<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = main &rArr; USB_HostMsdTask &rArr; USB_HostMsdFatfsUserReadWrite &rArr; USB_HostMsdFatfsListDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostTaskFn
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostApplicationInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VBUS_CTR_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[104]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7c]"></a>DELAY_xUs</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_mm32f327x.o(i.DELAY_xUs))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[7a]"></a>SetSysClock</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_mm32f327x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7b]"></a>SetSysClockToXX</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, system_mm32f327x.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[7e]"></a>TimingDelayDecrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, delay.o(i.TimingDelayDecrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4b]"></a>USB_HostEvent</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, app.o(i.USB_HostEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_HostEvent &rArr; USB_HostMsdEvent &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.USB_HostApplicationInit)
</UL>
<P><STRONG><a name="[da]"></a>USB_HostMsdFatfsDisplayFileInfo</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, host_msd_fatfs.o(i.USB_HostMsdFatfsDisplayFileInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostMsdFatfsDisplayFileInfo &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsListDirectory
</UL>

<P><STRONG><a name="[db]"></a>USB_HostMsdFatfsListDirectory</STRONG> (Thumb, 74 bytes, Stack size 88 bytes, host_msd_fatfs.o(i.USB_HostMsdFatfsListDirectory))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = USB_HostMsdFatfsListDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsDisplayFileInfo
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[de]"></a>USB_HostMsdFatfsTestDone</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, host_msd_fatfs.o(i.USB_HostMsdFatfsTestDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_HostMsdFatfsTestDone &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsUserReadWrite
</UL>

<P><STRONG><a name="[df]"></a>USB_HostMsdFatfsUserReadWrite</STRONG> (Thumb, 1930 bytes, Stack size 608 bytes, host_msd_fatfs.o(i.USB_HostMsdFatfsUserReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = USB_HostMsdFatfsUserReadWrite &rArr; USB_HostMsdFatfsListDirectory &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsTestDone
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsListDirectory
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdFatfsDisplayFileInfo
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdTask
</UL>

<P><STRONG><a name="[8f]"></a>USB_HostAllocateDeviceAddress</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, usb_host_devices.o(i.USB_HostAllocateDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_HostAllocateDeviceAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
</UL>

<P><STRONG><a name="[101]"></a>USB_HostControlBus</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, usb_host_devices.o(i.USB_HostControlBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostControlBus
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
</UL>

<P><STRONG><a name="[5a]"></a>USB_HostEnumerationTransferCallback</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, usb_host_devices.o(i.USB_HostEnumerationTransferCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = USB_HostEnumerationTransferCallback &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_devices.o(i.USB_HostProcessState)
</UL>
<P><STRONG><a name="[9f]"></a>USB_HostNotifyDevice</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, usb_host_devices.o(i.USB_HostNotifyDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessState
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessCallback
</UL>

<P><STRONG><a name="[fd]"></a>USB_HostParseDeviceConfigurationDescriptor</STRONG> (Thumb, 602 bytes, Stack size 20 bytes, usb_host_devices.o(i.USB_HostParseDeviceConfigurationDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_HostParseDeviceConfigurationDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostProcessCallback
</UL>

<P><STRONG><a name="[5d]"></a>USB_HostProcessCallback</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, usb_host_devices.o(i.USB_HostProcessCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = USB_HostProcessCallback &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostParseDeviceConfigurationDescriptor
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostNotifyDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_devices.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>USB_HostProcessState</STRONG> (Thumb, 404 bytes, Stack size 32 bytes, usb_host_devices.o(i.USB_HostProcessState))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostStandardSetGetDescriptor
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostStandardSetAddress
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCh9RequestCommon
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostNotifyDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostEnumerationTransferCallback
</UL>

<P><STRONG><a name="[100]"></a>USB_HostReleaseDeviceAddress</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usb_host_devices.o(i.USB_HostReleaseDeviceAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostReleaseDeviceAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceResource
</UL>

<P><STRONG><a name="[99]"></a>USB_HostReleaseDeviceResource</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, usb_host_devices.o(i.USB_HostReleaseDeviceResource))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_HostReleaseDeviceResource &rArr; USB_HostCancelTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryFree
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClosePipe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCancelTransfer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostReleaseDeviceAddress
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostControlBus
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
</UL>

<P><STRONG><a name="[98]"></a>USB_HostRemoveDeviceInstance</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, usb_host_devices.o(i.USB_HostRemoveDeviceInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_HostRemoveDeviceInstance
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostCloseDeviceInterface
</UL>

<P><STRONG><a name="[c0]"></a>USB_HostGetControllerInterface</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_host_hci.o(i.USB_HostGetControllerInterface))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
</UL>

<P><STRONG><a name="[a2]"></a>USB_HostGetInstance</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, usb_host_hci.o(i.USB_HostGetInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_HostGetInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
</UL>

<P><STRONG><a name="[c1]"></a>USB_HostReleaseInstance</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, usb_host_hci.o(i.USB_HostReleaseInstance))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostReleaseInstance
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaExitCritical
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostInit
</UL>

<P><STRONG><a name="[107]"></a>_USB_HostKhciAtomNonblockingTransaction</STRONG> (Thumb, 566 bytes, Stack size 72 bytes, usb_host_khci.o(i._USB_HostKhciAtomNonblockingTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _USB_HostKhciAtomNonblockingTransaction &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventWait
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciStartTranfer
</UL>

<P><STRONG><a name="[cd]"></a>_USB_HostKhciAttach</STRONG> (Thumb, 422 bytes, Stack size 32 bytes, usb_host_khci.o(i._USB_HostKhciAttach))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventClear
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDelay
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[c3]"></a>_USB_HostKhciBusControl</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, usb_host_khci.o(i._USB_HostKhciBusControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _USB_HostKhciBusControl &rArr; _USB_HostKhciDelay &rArr; _USB_HostKhciGetFrameCountSum
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKciIoctl
</UL>

<P><STRONG><a name="[c2]"></a>_USB_HostKhciCancelPipe</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciCancelPipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _USB_HostKhciCancelPipe &rArr; _USB_HostKhciUnlinkTrRequestFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciUnlinkTrRequestFromList
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKciIoctl
</UL>

<P><STRONG><a name="[c5]"></a>_USB_HostKhciDelay</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _USB_HostKhciDelay &rArr; _USB_HostKhciGetFrameCountSum
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciBusControl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAttach
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAtomNonblockingTransaction
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKciIoctl
</UL>

<P><STRONG><a name="[cf]"></a>_USB_HostKhciDetach</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, usb_host_khci.o(i._USB_HostKhciDetach))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _USB_HostKhciDetach &rArr; USB_HostDetachDevice &rArr; USB_HostDetachDeviceInternal &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventClear
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[d1]"></a>_USB_HostKhciFinishTranfer</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, usb_host_khci.o(i._USB_HostKhciFinishTranfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _USB_HostKhciFinishTranfer &rArr; _USB_HostKhciTransactionDone &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransactionDone
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[c4]"></a>_USB_HostKhciGetFrameCount</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usb_host_khci.o(i._USB_HostKhciGetFrameCount))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetRightTrRequest
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCountSum
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKciIoctl
</UL>

<P><STRONG><a name="[ca]"></a>_USB_HostKhciGetFrameCountSum</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, usb_host_khci.o(i._USB_HostKhciGetFrameCountSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _USB_HostKhciGetFrameCountSum
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCount
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciFinishTranfer
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciDelay
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciWritePipe
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciReadpipe
</UL>

<P><STRONG><a name="[10a]"></a>_USB_HostKhciGetRightTrRequest</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, usb_host_khci.o(i._USB_HostKhciGetRightTrRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _USB_HostKhciGetRightTrRequest &rArr; USB_OsaEventSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciGetFrameCount
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
</UL>

<P><STRONG><a name="[c9]"></a>_USB_HostKhciGetRoundUpPow2</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb_host_khci.o(i._USB_HostKhciGetRoundUpPow2))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciOpenPipe
</UL>

<P><STRONG><a name="[cb]"></a>_USB_HostKhciLinkTrRequestToList</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciLinkTrRequestToList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _USB_HostKhciLinkTrRequestToList
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciWritePipe
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciReadpipe
</UL>

<P><STRONG><a name="[10c]"></a>_USB_HostKhciProcessTrCallback</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciProcessTrCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _USB_HostKhciProcessTrCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
</UL>

<P><STRONG><a name="[ce]"></a>_USB_HostKhciReset</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usb_host_khci.o(i._USB_HostKhciReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _USB_HostKhciReset &rArr; USB_OsaEventSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaEventSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>

<P><STRONG><a name="[10b]"></a>_USB_HostKhciStartTranfer</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciStartTranfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _USB_HostKhciStartTranfer &rArr; _USB_HostKhciAtomNonblockingTransaction &rArr; USB_HostHelperGetPeripheralInformation &rArr; USB_HostHubGetTotalThinkTime &rArr;  USB_HostHelperGetPeripheralInformation (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciAtomNonblockingTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
</UL>

<P><STRONG><a name="[109]"></a>_USB_HostKhciTransactionDone</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, usb_host_khci.o(i._USB_HostKhciTransactionDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _USB_HostKhciTransactionDone &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciFinishTranfer
</UL>

<P><STRONG><a name="[108]"></a>_USB_HostKhciUnlinkTrRequestFromList</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, usb_host_khci.o(i._USB_HostKhciUnlinkTrRequestFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _USB_HostKhciUnlinkTrRequestFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexUnlock
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMutexLock
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferStateMachine
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciTransferClearUp
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_USB_HostKhciCancelPipe
</UL>

<P><STRONG><a name="[a7]"></a>USB_HostHubClassRequestCommon</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, usb_host_hub.o(i.USB_HostHubClassRequestCommon))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetPortFeature
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetStatus
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetPortStatus
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetDescriptor
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClearPortFeature
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClearFeature
</UL>

<P><STRONG><a name="[4c]"></a>USB_HostHubControlCallback</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, usb_host_hub.o(i.USB_HostHubControlCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_HostHubControlCallback &rArr; USB_HostFreeTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hub.o(i.USB_HostHubClassRequestCommon)
</UL>
<P><STRONG><a name="[4f]"></a>USB_HostHubInPipeCallback</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, usb_host_hub.o(i.USB_HostHubInPipeCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_HostHubInPipeCallback &rArr; USB_HostFreeTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_hub.o(i.USB_HostHubInterruptRecv)
</UL>
<P><STRONG><a name="[ab]"></a>USB_HostHubGetHubList</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_host_hub_app.o(i.USB_HostHubGetHubList))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetTotalThinkTime
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubPort
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHsHubNumber
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubDeviceEvent
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptInCallback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubControlCallback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
</UL>

<P><STRONG><a name="[ac]"></a>USB_HostHubGetInterruptStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usb_host_hub_app.o(i.USB_HostHubGetInterruptStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_HostHubGetInterruptStatus &rArr; USB_HostHubInterruptRecv &rArr; USB_HostRecv
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptInCallback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubControlCallback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessData
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcess
</UL>

<P><STRONG><a name="[ad]"></a>USB_HostHubProcess</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USB_HostHubProcess &rArr; USB_HostHubSetPortFeature &rArr; USB_HostHubClassRequestCommon &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetPortFeature
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetDescriptor
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClearFeature
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OsaMemoryAllocate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubControlCallback
</UL>

<P><STRONG><a name="[ba]"></a>USB_HostHubProcessData</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, usb_host_hub_app.o(i.USB_HostHubProcessData))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = USB_HostHubProcessData &rArr; USB_HostHubProcessPort &rArr; USB_HostHubProcessPortAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetStatus
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubInterruptInCallback
</UL>

<P><STRONG><a name="[ae]"></a>USB_HostHubProcessPort</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usb_host_hub_app.o(i.USB_HostHubProcessPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = USB_HostHubProcessPort &rArr; USB_HostHubProcessPortAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortDetach
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPortAttach
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubControlCallback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessData
</UL>

<P><STRONG><a name="[bd]"></a>USB_HostHubProcessPortAttach</STRONG> (Thumb, 732 bytes, Stack size 40 bytes, usb_host_hub_app.o(i.USB_HostHubProcessPortAttach))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = USB_HostHubProcessPortAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHelperGetPeripheralInformation
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubSetPortFeature
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetPortStatus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClearPortFeature
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostAttachDevice
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPort
</UL>

<P><STRONG><a name="[be]"></a>USB_HostHubProcessPortDetach</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, usb_host_hub_app.o(i.USB_HostHubProcessPortDetach))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = USB_HostHubProcessPortDetach &rArr; USB_HostDetachDeviceInternal &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetPortStatus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubClearPortFeature
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostDetachDeviceInternal
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetInterruptStatus
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubGetHubList
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostHubProcessPort
</UL>

<P><STRONG><a name="[55]"></a>USB_HostMsdCbwCallback</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdCbwCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_HostMsdCbwCallback &rArr; USB_HostMsdMassStorageReset &rArr; USB_HostMsdControl &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassStorageReset
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdProcessCommand)
</UL>
<P><STRONG><a name="[d6]"></a>USB_HostMsdClearHalt</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdClearHalt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_HostMsdClearHalt &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetClearInCallback
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetCallback
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDataCallback
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCswCallback
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCbwCallback
</UL>

<P><STRONG><a name="[50]"></a>USB_HostMsdClearHaltCallback</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdClearHaltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_HostMsdClearHaltCallback &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
</UL>
<BR>[Address Reference Count : 3]<UL><LI> usb_host_msd.o(i.USB_HostMsdDataCallback)
<LI> usb_host_msd.o(i.USB_HostMsdCbwCallback)
<LI> usb_host_msd.o(i.USB_HostMsdCswCallback)
</UL>
<P><STRONG><a name="[d5]"></a>USB_HostMsdCommandDone</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usb_host_msd.o(i.USB_HostMsdCommandDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_HostMsdCommandDone
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdResetDone
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDataCallback
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCswCallback
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHaltCallback
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCbwCallback
</UL>

<P><STRONG><a name="[d8]"></a>USB_HostMsdControl</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, usb_host_msd.o(i.USB_HostMsdControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_HostMsdControl &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSendSetup
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassStorageReset
</UL>

<P><STRONG><a name="[57]"></a>USB_HostMsdCswCallback</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdCswCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_HostMsdCswCallback &rArr; USB_HostMsdMassStorageReset &rArr; USB_HostMsdControl &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassStorageReset
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdProcessCommand)
</UL>
<P><STRONG><a name="[56]"></a>USB_HostMsdDataCallback</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdDataCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_HostMsdDataCallback &rArr; USB_HostMsdMassStorageReset &rArr; USB_HostMsdControl &rArr; USB_HostSendSetup
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassStorageReset
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdProcessCommand)
</UL>
<P><STRONG><a name="[54]"></a>USB_HostMsdMassResetCallback</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdMassResetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostMsdMassResetCallback &rArr; USB_HostMsdResetDone &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdResetDone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdMassStorageReset)
</UL>
<P><STRONG><a name="[52]"></a>USB_HostMsdMassResetClearInCallback</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdMassResetClearInCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostMsdMassResetClearInCallback &rArr; USB_HostMsdResetDone &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdResetDone
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHalt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdMassResetCallback)
</UL>
<P><STRONG><a name="[53]"></a>USB_HostMsdMassResetClearOutCallback</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdMassResetClearOutCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_HostMsdMassResetClearOutCallback &rArr; USB_HostMsdResetDone &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdResetDone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdMassResetClearInCallback)
</UL>
<P><STRONG><a name="[f5]"></a>USB_HostMsdOpenInterface</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, usb_host_msd.o(i.USB_HostMsdOpenInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_HostMsdOpenInterface &rArr; USB_HostOpenPipe
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostOpenPipe
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostClosePipe
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterface
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdSetInterfaceCallback
</UL>

<P><STRONG><a name="[d3]"></a>USB_HostMsdProcessCommand</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, usb_host_msd.o(i.USB_HostMsdProcessCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostSend
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostRecv
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMallocTransfer
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdResetDone
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdDataCallback
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCswCallback
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdClearHaltCallback
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCbwCallback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommand
</UL>

<P><STRONG><a name="[f4]"></a>USB_HostMsdResetDone</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usb_host_msd.o(i.USB_HostMsdResetDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_HostMsdResetDone &rArr; USB_HostMsdProcessCommand &rArr; USB_HostSend
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdProcessCommand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdCommandDone
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetClearOutCallback
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetClearInCallback
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdMassResetCallback
</UL>

<P><STRONG><a name="[58]"></a>USB_HostMsdSetInterfaceCallback</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usb_host_msd.o(i.USB_HostMsdSetInterfaceCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USB_HostMsdSetInterfaceCallback &rArr; USB_HostMsdOpenInterface &rArr; USB_HostOpenPipe
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostFreeTransfer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdOpenInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_host_msd.o(i.USB_HostMsdSetInterface)
</UL>
<P><STRONG><a name="[112]"></a>check_fs</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[11d]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[123]"></a>clst2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clst2sect))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
</UL>

<P><STRONG><a name="[116]"></a>create_chain</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[119]"></a>create_name</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_2nd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_1st
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[11b]"></a>dbc_1st</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ff.o(i.dbc_1st))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[11c]"></a>dbc_2nd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ff.o(i.dbc_2nd))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[11e]"></a>dir_alloc</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[121]"></a>dir_clear</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ff.o(i.dir_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = dir_clear &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[125]"></a>dir_find</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[120]"></a>dir_next</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[126]"></a>dir_read</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[127]"></a>dir_register</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = dir_register &rArr; dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[11f]"></a>dir_sdi</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[13a]"></a>find_volume</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[132]"></a>follow_path</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[117]"></a>get_fat</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[137]"></a>get_fileinfo</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_fileinfo
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[131]"></a>get_ldnumber</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[134]"></a>ld_clust</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ld_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[130]"></a>ld_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.ld_dword))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[114]"></a>ld_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(i.ld_word))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[115]"></a>mem_cmp</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[128]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[11a]"></a>mem_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[12f]"></a>mount_volume</STRONG> (Thumb, 658 bytes, Stack size 64 bytes, ff.o(i.mount_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[113]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[118]"></a>put_fat</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[136]"></a>remove_chain</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[135]"></a>st_clust</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ff.o(i.st_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = st_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[133]"></a>st_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.st_dword))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
</UL>

<P><STRONG><a name="[138]"></a>st_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(i.st_word))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
</UL>

<P><STRONG><a name="[139]"></a>sync_fs</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[122]"></a>sync_window</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = sync_window &rArr; disk_write &rArr; USB_HostMsdWriteDisk &rArr; USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
</UL>

<P><STRONG><a name="[12e]"></a>validate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = validate &rArr; disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[9a]"></a>USB_HostControllerTaskFunction</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fsl_usb_disk_bm.o(i.USB_HostControllerTaskFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = USB_HostControllerTaskFunction &rArr; USB_HostKhciTaskFunction &rArr; _USB_HostKhciAttach &rArr; USB_HostAttachDevice &rArr; USB_HostProcessState &rArr; USB_HostNotifyDevice &rArr; USB_HostHubDeviceEvent &rArr;  USB_HostDetachDeviceInternal (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostKhciTaskFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdWriteDisk
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdReadDisk
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdIoctlDisk
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_HostMsdInitializeDisk
</UL>

<P><STRONG><a name="[51]"></a>USB_HostMsdUfiCallback</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, fsl_usb_disk_bm.o(i.USB_HostMsdUfiCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_HostMsdUfiCallback
</UL>
<BR>[Address Reference Count : 4]<UL><LI> fsl_usb_disk_bm.o(i.USB_HostMsdInitializeDisk)
<LI> fsl_usb_disk_bm.o(i.USB_HostMsdIoctlDisk)
<LI> fsl_usb_disk_bm.o(i.USB_HostMsdReadDisk)
<LI> fsl_usb_disk_bm.o(i.USB_HostMsdWriteDisk)
</UL>
<P><STRONG><a name="[10e]"></a>_printf_core</STRONG> (Thumb, 984 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[111]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[110]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
