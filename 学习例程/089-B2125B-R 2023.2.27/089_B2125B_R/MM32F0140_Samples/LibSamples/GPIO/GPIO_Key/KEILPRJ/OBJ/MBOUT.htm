<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\MBOUT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\MBOUT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun Oct 08 09:56:31 2023
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Test_func &rArr; Sleep_Process &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from main.o(i.EXTI4_15_IRQHandler) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[20]">FLEX_CAN_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[e]">HWDIV_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from main.o(i.HardFault_Handler) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[8]">MIPI_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from delay.o(i.SysTick_Handler) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[22]">SystemInit</a> from system_mm32f0140.o(i.SystemInit) referenced from startup_mm32f0140_keil.o(.text)
 <LI><a href="#[17]">TIM14_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[18]">TIM16_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[19]">TIM17_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from tim1_interrupt.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1d]">UART1_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1e]">UART2_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[1f]">UART3_IRQHandler</a> from startup_mm32f0140_keil.o(.text) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from main.o(i.WWDG_IRQHandler) referenced from startup_mm32f0140_keil.o(RESET)
 <LI><a href="#[23]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f0140_keil.o(.text)
 <LI><a href="#[21]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(.text)
</UL>
<P><STRONG><a name="[94]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[95]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[96]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[97]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[26]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[98]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[99]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FLEX_CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MIPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f0140_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Process
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
</UL>

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>A7325TX_Process</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325TX_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = A7325TX_Process &rArr; WriteFIFO &rArr; ByteSend
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFIFO
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCH_A7325
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Process
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[2f]"></a>A7325_CHGroupCal</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, rf_a7325.o(i.A7325_CHGroupCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = A7325_CHGroupCal &rArr; ReadReg &rArr; Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Err_State
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Cal
</UL>

<P><STRONG><a name="[33]"></a>A7325_Cal</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325_Cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = A7325_Cal &rArr; A7325_CHGroupCal &rArr; ReadReg &rArr; Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_CHGroupCal
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
</UL>

<P><STRONG><a name="[34]"></a>A7325_Config_M</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325_Config_M))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = A7325_Config_M &rArr; WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
</UL>

<P><STRONG><a name="[35]"></a>A7325_ExitSleep</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325_ExitSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = A7325_ExitSleep &rArr; StrobeCmd &rArr; Send4Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[36]"></a>A7325_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = A7325_Init &rArr; initRF_M &rArr; A7325_Cal &rArr; A7325_CHGroupCal &rArr; ReadReg &rArr; Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCH_A7325
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>A7325_Sleep</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rf_a7325.o(i.A7325_Sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = A7325_Sleep &rArr; StrobeCmd &rArr; Send4Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[39]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32f0140.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
</UL>

<P><STRONG><a name="[3a]"></a>ByteSend</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rf_a7325.o(i.ByteSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ByteSend
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFIFO
</UL>

<P><STRONG><a name="[3d]"></a>DELAY_xUs</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, system_mm32f0140.o(i.DELAY_xUs))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send4Bit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
</UL>

<P><STRONG><a name="[3e]"></a>DirectMode_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rf_a7325.o(i.DirectMode_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DirectMode_init &rArr; StrobeCmd &rArr; Send4Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCH_A7325
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
</UL>

<P><STRONG><a name="[48]"></a>EXTI_DeInit</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, hal_exti.o(i.EXTI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EXTI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exEXTI_LineDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
</UL>

<P><STRONG><a name="[43]"></a>EXTI_Init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_Config
</UL>

<P><STRONG><a name="[41]"></a>EXTI_LineConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hal_exti.o(i.EXTI_LineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_LineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_Config
</UL>

<P><STRONG><a name="[42]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_Config
</UL>

<P><STRONG><a name="[32]"></a>Err_State</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_a7325.o(i.Err_State))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_CHGroupCal
</UL>

<P><STRONG><a name="[4d]"></a>GPIO_Init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_Out
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_In
</UL>

<P><STRONG><a name="[4f]"></a>GPIO_Input</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, main.o(i.GPIO_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Input &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[52]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyCheck
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_process
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_scan
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFIFO
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send4Bit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_process
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_scan
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFIFO
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send4Bit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
</UL>

<P><STRONG><a name="[4c]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GPIO_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_Out
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_In
</UL>

<P><STRONG><a name="[92]"></a>GetChipdata</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.GetChipdata))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>Get_KeyValue</STRONG> (Thumb, 534 bytes, Stack size 8 bytes, key.o(i.Get_KeyValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Get_KeyValue &rArr; Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>IVU_CheckStatus</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, hal_iwdg.o(i.IVU_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[91]"></a>IWDG_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[58]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IVU_CheckStatus
</UL>

<P><STRONG><a name="[90]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[59]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, hal_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetPrescaler &rArr; PVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[5b]"></a>IWDG_SetReload</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, hal_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetReload &rArr; RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[8f]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[5d]"></a>Init_GPIO</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, main.o(i.Init_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init_GPIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[5e]"></a>Is_IntoTest</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, test.o(i.Is_IntoTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Is_IntoTest &rArr; Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>Iwdg_Irq_ON</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.Iwdg_Irq_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Iwdg_Irq_ON &rArr; EXTI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_DeInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>KeyCheck</STRONG> (Thumb, 684 bytes, Stack size 8 bytes, key.o(i.KeyCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = KeyCheck &rArr; Get_KeyValue &rArr; Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeAddHandle_func
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>Key_Process</STRONG> (Thumb, 804 bytes, Stack size 8 bytes, key.o(i.Key_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Key_Process &rArr; StandBy_init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_convert
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandBy_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandBy_func
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>KeytoLed</STRONG> (Thumb, 376 bytes, Stack size 0 bytes, test.o(i.KeytoLed))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[68]"></a>NVIC_Configure</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, tim1_interrupt.o(i.NVIC_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exNVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_NVIC_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_NVIC_Init
</UL>

<P><STRONG><a name="[5a]"></a>PVU_CheckStatus</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, hal_iwdg.o(i.PVU_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[74]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, hal_pwr.o(i.PWR_EnterSTOPMode))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[93]"></a>PowerOn_init</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, led_rf.o(i.PowerOn_init))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GPIO_Config
</UL>

<P><STRONG><a name="[40]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GPIO_Config
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_Config
</UL>

<P><STRONG><a name="[8e]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[8d]"></a>RCC_LSICmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[72]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[6a]"></a>RF_Process</STRONG> (Thumb, 606 bytes, Stack size 16 bytes, led_rf.o(i.RF_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RF_Process &rArr; A7325TX_Process &rArr; WriteFIFO &rArr; ByteSend
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325TX_Process
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>RVU_CheckStatus</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, hal_iwdg.o(i.RVU_CheckStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
</UL>

<P><STRONG><a name="[31]"></a>ReadReg</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, rf_a7325.o(i.ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ReadReg &rArr; Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_Out
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SDIO_In
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_CHGroupCal
</UL>

<P><STRONG><a name="[6d]"></a>Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_a7325.o(i.Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Reset &rArr; WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
</UL>

<P><STRONG><a name="[6e]"></a>Send4Bit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rf_a7325.o(i.Send4Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Send4Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
</UL>

<P><STRONG><a name="[2d]"></a>SetCH_A7325</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rf_a7325.o(i.SetCH_A7325))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetCH_A7325 &rArr; WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325TX_Process
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectMode_init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Init
</UL>

<P><STRONG><a name="[62]"></a>Set_All_OutPut</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, key.o(i.Set_All_OutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_All_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_DisInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyCheck
</UL>

<P><STRONG><a name="[51]"></a>Set_PA5_OutPut</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, key.o(i.Set_PA5_OutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_PA5_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
</UL>

<P><STRONG><a name="[53]"></a>Set_PA7_OutPut</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, key.o(i.Set_PA7_OutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_PA7_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
</UL>

<P><STRONG><a name="[54]"></a>Set_PB0_OutPut</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, key.o(i.Set_PB0_OutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_PB0_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
</UL>

<P><STRONG><a name="[55]"></a>Set_PB1_OutPut</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, key.o(i.Set_PB1_OutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
</UL>

<P><STRONG><a name="[6c]"></a>Set_SDIO_In</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rf_a7325.o(i.Set_SDIO_In))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_SDIO_In &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
</UL>

<P><STRONG><a name="[6b]"></a>Set_SDIO_Out</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rf_a7325.o(i.Set_SDIO_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadReg
</UL>

<P><STRONG><a name="[71]"></a>Sleep_Process</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, main.o(i.Sleep_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Sleep_Process &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTOPMode
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_DisInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Input
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Sleep
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_ExitSleep
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[65]"></a>StandBy_func</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led_rf.o(i.StandBy_func))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_calc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Process
</UL>

<P><STRONG><a name="[67]"></a>StandBy_init</STRONG> (Thumb, 228 bytes, Stack size 4 bytes, led_rf.o(i.StandBy_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = StandBy_init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Process
</UL>

<P><STRONG><a name="[2c]"></a>StrobeCmd</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rf_a7325.o(i.StrobeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StrobeCmd &rArr; Send4Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send4Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325TX_Process
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectMode_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Sleep
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_ExitSleep
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Cal
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelayDecrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_mm32f0140.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 432 bytes, Stack size 8 bytes, tim1_interrupt.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM1_BRK_UP_TRG_COM_IRQHandler &rArr; led_process &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_process
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_scan
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>TIM1_Init</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, tim1_interrupt.o(i.TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[7f]"></a>TIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[78]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[77]"></a>TIM_GetITStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[80]"></a>TIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[7d]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[7c]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
</UL>

<P><STRONG><a name="[82]"></a>TestGet_KeyValue</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, test.o(i.TestGet_KeyValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TestGet_KeyValue &rArr; Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB1_OutPut
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PB0_OutPut
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA7_OutPut
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PA5_OutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyCheck
</UL>

<P><STRONG><a name="[83]"></a>TestKeyCheck</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, test.o(i.TestKeyCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TestKeyCheck &rArr; TestGet_KeyValue &rArr; Set_PB1_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestGet_KeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[84]"></a>Test_func</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, test.o(i.Test_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Test_func &rArr; Sleep_Process &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteReg
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325TX_Process
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_horse
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestKeyCheck
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeytoLed
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectMode_init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>Testled_horse</STRONG> (Thumb, 292 bytes, Stack size 4 bytes, test.o(i.Testled_horse))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Testled_horse &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[7a]"></a>Testled_scan</STRONG> (Thumb, 442 bytes, Stack size 8 bytes, test.o(i.Testled_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Testled_scan &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>TimeAddHandle_func</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, key.o(i.TimeAddHandle_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimeAddHandle_func
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_convert
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSave_func
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeAdd_func
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
</UL>

<P><STRONG><a name="[88]"></a>TimeAdd_func</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, key.o(i.TimeAdd_func))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeAddHandle_func
</UL>

<P><STRONG><a name="[89]"></a>TimeSave_func</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, key.o(i.TimeSave_func))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeAddHandle_func
</UL>

<P><STRONG><a name="[8a]"></a>Time_calc</STRONG> (Thumb, 172 bytes, Stack size 4 bytes, led_rf.o(i.Time_calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Time_calc
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandBy_func
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>Time_convert</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, led_rf.o(i.Time_convert))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandBy_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeAddHandle_func
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Process
</UL>

<P><STRONG><a name="[75]"></a>WKUP_STOP_DisInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.WKUP_STOP_DisInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WKUP_STOP_DisInit &rArr; Set_All_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_NVIC_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisEXTI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[73]"></a>WKUP_STOP_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.WKUP_STOP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WKUP_STOP_Init &rArr; Set_All_OutPut &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_All_OutPut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_NVIC_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GPIO_Config
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
</UL>

<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, main.o(i.WWDG_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WWDG_IRQHandler &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_calc
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f0140_keil.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>WriteFIFO</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rf_a7325.o(i.WriteFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteFIFO &rArr; ByteSend
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325TX_Process
</UL>

<P><STRONG><a name="[8c]"></a>WriteID</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rf_a7325.o(i.WriteID))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteID &rArr; ByteSend
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initRF_M
</UL>

<P><STRONG><a name="[30]"></a>WriteReg</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, rf_a7325.o(i.WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteReg
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Process
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCH_A7325
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DirectMode_init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Config_M
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_CHGroupCal
</UL>

<P><STRONG><a name="[8b]"></a>Write_Iwdg_ON</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.Write_Iwdg_ON))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Write_Iwdg_ON &rArr; IWDG_SetReload &rArr; RVU_CheckStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RVU_CheckStatus
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PVU_CheckStatus
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IVU_CheckStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, led_rf.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_process
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_scan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Testled_horse
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
</UL>

<P><STRONG><a name="[9d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[49]"></a>exEXTI_LineDisable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hal_exti.o(i.exEXTI_LineDisable))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_DeInit
</UL>

<P><STRONG><a name="[69]"></a>exNVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_misc.o(i.exNVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configure
</UL>

<P><STRONG><a name="[37]"></a>initRF_M</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rf_a7325.o(i.initRF_M))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = initRF_M &rArr; A7325_Cal &rArr; A7325_CHGroupCal &rArr; ReadReg &rArr; Set_SDIO_Out &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteID
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Config_M
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Init
</UL>

<P><STRONG><a name="[79]"></a>led_process</STRONG> (Thumb, 522 bytes, Stack size 8 bytes, led_rf.o(i.led_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = led_process &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>main</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = main &rArr; Test_func &rArr; Sleep_Process &rArr; SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOn_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configure
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Process
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCheck
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Iwdg_ON
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Iwdg_Irq_ON
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_GPIO
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChipdata
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Process
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_func
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_IntoTest
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7325_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6f]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32f0140.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX_HSI
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[70]"></a>SetSysClockToXX_HSI</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, system_mm32f0140.o(i.SetSysClockToXX_HSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SetSysClockToXX_HSI &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_xUs
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[76]"></a>TimingDelayDecrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, delay.o(i.TimingDelayDecrement))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3f]"></a>DisEXTI_Config</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(i.DisEXTI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DisEXTI_Config &rArr; EXTI_LineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_DisInit
</UL>

<P><STRONG><a name="[44]"></a>DisEXTI_NVIC_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.DisEXTI_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DisEXTI_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_DisInit
</UL>

<P><STRONG><a name="[47]"></a>EXTI_Config</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(i.EXTI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI_Config &rArr; EXTI_LineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_StructInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_Init
</UL>

<P><STRONG><a name="[4a]"></a>EXTI_GPIO_Config</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.EXTI_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EXTI_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_Init
</UL>

<P><STRONG><a name="[4e]"></a>EXTI_NVIC_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.EXTI_NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WKUP_STOP_Init
</UL>

<P><STRONG><a name="[56]"></a>NVIC_SystemReset</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IRQHandler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
