C51 COMPILER V9.01   SC95F_UART0                                                           09/07/2020 16:59:34 PAGE 1   
C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_UART0
OBJECT MODULE PLACED IN ..\Output\sc95f_uart0.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_uart0.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib\
                    -inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_uart0.lst) OBJECT(..\Output\sc95f_uart0.obj)
line level    source
   1         
   2         
   3         
   4         
   5         
   6         
   7         
   8         
   9         
  10         
  11          
  12          #include "sc95f_uart0.h"
  13          
  14          
  20          void UART0_DeInit(void)
  21          {
  22   1              SCON = 0X00;
  23   1              SBUF = 0X00;
  24   1              PCON &= 0X7F;
  25   1              IE &= 0XEF;
  26   1              IP &= 0XEF;     
  27   1      }
  28          
  29          
  40          void UART0_Init(uint32_t Uart0Fsys, uint32_t BaudRate, UART0_Mode_Typedef Mode,
  41                                     UART0_Clock_Typedef ClockMode, UART0_RX_Typedef RxMode)
  42          {
  43   1              SCON  = SCON & 0X2F | Mode | RxMode;   
  44   1              
  45   1              if(Mode == UART0_Mode_8B)
  46   1              {
  47   2                      if(BaudRate == UART0_BaudRate_FsysDIV12)
  48   2                      {
  49   3                              SCON &= 0XDF;           
  50   3                      }
  51   2                      else if(BaudRate == UART0_BaudRate_FsysDIV4)
  52   2                      {
  53   3                              SCON |= 0X20;           
  54   3                      }
  55   2              }
  56   1              else
  57   1              {                               
  58   2                      #if defined (SC95F8x2x) || defined (SC95F7x2x)  
  59   2                      TXINX = 0X02;
  60   2                      #endif
  61   2                      TXCON = (TXCON & 0xCF) | ClockMode;            
  62   2                      if(ClockMode == UART0_CLOCK_TIMER1)
  63   2                      {
  64   3                              TH1 = (Uart0Fsys / BaudRate) / 256;
  65   3                              TL1 = (Uart0Fsys / BaudRate) % 256;
  66   3                              TR1 = 0;
  67   3                      }
  68   2                      else if(ClockMode == UART0_CLOCK_TIMER2)
  69   2                      {
  70   3                              RCAPXH = (Uart0Fsys / BaudRate) / 256;
  71   3                              RCAPXL = (Uart0Fsys / BaudRate) % 256;
  72   3                              #if defined (SC95F8x2x) || defined (SC95F7x2x)  
  73   3                              TRX = 1;
  74   3                              #endif
  75   3                      }
  76   2              }
  77   1      }
  78          
  79          
  85          void UART0_SendData8(uint8_t Data)
  86          {
  87   1         SBUF = Data;
  88   1      }
  89          
  90          
  96          uint8_t UART0_ReceiveData8(void)
  97          {
  98   1              return SBUF;
  99   1      }
 100          
 101          
 107          void UART0_SendData9(uint16_t Data)
 108          {
 109   1              uint8_t Data_9Bit;
 110   1              Data_9Bit = (Data >> 8);
 111   1              if(Data_9Bit)
 112   1              {
 113   2                      SCON |= 0X08;           
 114   2              }
 115   1              else
 116   1              {
 117   2                      SCON &= 0XF7;
 118   2              }
 119   1              SBUF = (uint8_t)Data;           
 120   1      }
 121          
 122          
 128          uint16_t UART0_ReceiveData9(void)
 129          {
 130   1              uint16_t Data9;
 131   1              Data9 =  SBUF + ((uint16_t)(SCON&0X04)<<6);
 132   1              SCON &= 0XFB;
 133   1              return Data9;
 134   1      }
 135          
 136          
 143          void UART0_ITConfig(FunctionalState NewState, PriorityStatus Priority)
 144          {
 145   1              if(NewState == DISABLE)
 146   1          {
 147   2             EUART = 0;
 148   2          }
 149   1          else
 150   1          {
 151   2             EUART = 1;
 152   2          }
 153   1             
 154   1              if(Priority == LOW)
 155   1              {
 156   2                      IPUART = 0;
 157   2              }
 158   1              else
 159   1              {
 160   2                      IPUART = 1;
 161   2              }
 162   1      }
 163          
 164          
 170          FlagStatus UART0_GetFlagStatus(UART0_Flag_Typedef UART0_Flag)
 171          {
 172   1              return (FlagStatus)(SCON & UART0_Flag);
 173   1      }
 174          
 175          
 181          void UART0_ClearFlag(UART0_Flag_Typedef UART0_Flag)
 182          {
 183   1              SCON &= (~UART0_Flag);
 184   1      }
 185          
 186          
MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.
C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
