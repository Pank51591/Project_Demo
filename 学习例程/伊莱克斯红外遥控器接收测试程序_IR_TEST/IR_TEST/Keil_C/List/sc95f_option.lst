C51 COMPILER V9.01   SC95F_OPTION                                                          09/07/2020 16:59:31 PAGE 1   
C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_OPTION
OBJECT MODULE PLACED IN ..\Output\sc95f_option.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_option.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib
                    -\inc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_option.lst) OBJECT(..\Output\sc95f_option.obj)
line level    source
   1         
   2         
   3         
   4         
   5         
   6         
   7         
   8         
   9         
  10         
  11          
  12          #include "sc95f_option.h"
  13          
  14          
  20          void OPTION_WDT_Cmd(FunctionalState NewState)
  21          {
  22   1              OPINX = 0XC1;
  23   1              if(NewState == DISABLE)
  24   1          {
  25   2             OPREG &= 0X7F;
  26   2          }
  27   1          else
  28   1          {
  29   2             OPREG |= 0X80;
  30   2          }   
  31   1      }
  32          
  33          
  39          void OPTION_XTIPLL_Cmd(FunctionalState NewState)
  40          {
  41   1              OPINX = 0XC1;
  42   1              if(NewState == DISABLE)
  43   1          {
  44   2             OPREG &= 0XBF;
  45   2          }
  46   1          else
  47   1          {
  48   2             OPREG |= 0X40;
  49   2          }   
  50   1      }
  51          
  52          
  58          void OPTION_SYSCLK_Init(SYSCLK_PresSel_TypeDef SYSCLK_PresSel)
  59          {
  60   1              OPINX = 0XC1;
  61   1              OPREG = OPREG & 0XCF | SYSCLK_PresSel;  
  62   1      }
  63          
  64          
  70          void OPTION_RST_PIN_Cmd(FunctionalState NewState)
  71          {
  72   1              OPINX = 0XC1;
  73   1              if(NewState == DISABLE)
  74   1          {
  75   2                      OPREG |= 0X08;
  76   2          }
  77   1          else
  78   1          {
  79   2              OPREG &= 0XF7;
  80   2          }                                   
  81   1      }
  82          
  83          
  89          void OPTION_LVR_Init(LVR_Config_TypeDef LVR_Config)
  90          {
  91   1              OPINX = 0XC1;
  92   1              OPREG = OPREG & 0XF8 | LVR_Config;      
  93   1      }
  94          
  95          
 101          void OPTION_ADC_VrefConfig(ADC_Vref_TypeDef ADC_Vref)
 102          {
 103   1              OPINX = 0xC2;           
 104   1              if(ADC_Vref == ADC_VREF_2_048V)
 105   1              {
 106   2                      OPREG &= 0x3f;
 107   2                      OPREG |= 0x40;         
 108   2              }
 109   1              if(ADC_Vref == ADC_VREF_1_024V)
 110   1              {
 111   2                      OPREG &= 0x3f;
 112   2                      OPREG |= 0x80;         
 113   2              }
 114   1              if(ADC_Vref == ADC_VREF_VDD)
 115   1              {
 116   2                      OPREG &= 0x3f;         
 117   2              }
 118   1      }
 119          
 120          
 126          void OPTION_IAP_SetOperateRange(IAP_OperateRange_TypeDef IAP_OperateRange)
 127          {
 128   1              OPINX = 0xC2;
 129   1              OPREG = (OPREG & 0xF3) | IAP_OperateRange;
 130   1      }
 131          
 138          void OPTION_JTG_Cmd(FunctionalState NewState)
 139          {
 140   1              OPINX = 0xC2;
 141   1              if(NewState == DISABLE)
 142   1          {
 143   2                      OPREG |= 0X10;
 144   2          }
 145   1          else
 146   1          {
 147   2              OPREG &= 0XEF;
 148   2          }   
 149   1      }
 150          
 151          
MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    117    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.
C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
