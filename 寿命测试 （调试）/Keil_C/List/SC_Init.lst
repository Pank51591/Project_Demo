C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SC_INIT
OBJECT MODULE PLACED IN ..\Output\SC_Init.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil_v5\C51\BIN\C51.EXE ..\User\SC_Init.c LARGE OBJECTADVANCED OPTIMIZE(9,SI
                    -ZE) BROWSE INCDIR(..\FWLib\SC95F_Lib\inc;..\User;..\User\Funtion;..\SOC_DebugTouchKey_Lib;..\SOC_DebugTouchKey_Lib;..\IA
                    -P_Lib) DEFINE(SC95F8x1xB) DEBUG PRINT(..\List\SC_Init.lst) TABS(2) OBJECT(..\Output\SC_Init.obj)

line level    source

   1          #include "SC_System.h"
   2          
   3          /*****************************************************
   4          *函数名称: SC_Init
   5          *函数功能: MCU初始化函数
   6          *入口参数：void
   7          *出口参数：void
   8          *****************************************************/
   9          void SC_Init(void)
  10          {
  11   1        SC_GPIO_Init();
  12   1        SC_OPTION_Init();
  13   1        SC_GPIO_LowOutput();
  14   1        SC_TIM0_Init();
  15   1        SC_TIM1_Init();
  16   1        SC_PWM0_Init();
  17   1      //  SC_PWM2_Init();
  18   1        SC_PWM3_Init();
  19   1        SC_INT_Init();
  20   1        SC_ADC_Init();
  21   1        SC_WDT_Init();
  22   1        SC_EXtern_Init();
  23   1      
  24   1      }
  25          
  26          /*****************************************************
  27          *函数名称: SC_OPTION_Init
  28          *函数功能: OPTION配置初始化函数
  29          *入口参数：void
  30          *出口参数：void
  31          *****************************************************/
  32          void SC_OPTION_Init(void)
  33          {
  34   1        /*OPTION_Init write here*/    
  35   1      }
  36          
  37          /*****************************************************
  38          *函数名称: SC_GPIO_Init
  39          *函数功能: GPIO初始化函数
  40          *入口参数：void
  41          *出口参数：void
  42          *****************************************************/
  43          void SC_GPIO_Init(void)
  44          {
  45   1        GPIO_Init(GPIO1, GPIO_PIN_4, GPIO_MODE_OUT_PP);
  46   1        GPIO_Init(GPIO0, GPIO_PIN_2, GPIO_MODE_OUT_PP);
  47   1        GPIO_Init(GPIO0, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  48   1        GPIO_Init(GPIO0, GPIO_PIN_5, GPIO_MODE_OUT_PP);
  49   1        GPIO_Init(GPIO0, GPIO_PIN_6, GPIO_MODE_OUT_PP);
  50   1        GPIO_Init(GPIO5, GPIO_PIN_2, GPIO_MODE_OUT_PP);
  51   1        GPIO_Init(GPIO5, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  52   1        GPIO_Init(GPIO5, GPIO_PIN_4, GPIO_MODE_OUT_PP);
  53   1        GPIO_Init(GPIO5, GPIO_PIN_5, GPIO_MODE_OUT_PP);
C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 2   

  54   1        GPIO_Init(GPIO4, GPIO_PIN_7, GPIO_MODE_OUT_PP);
  55   1        GPIO_Init(GPIO4, GPIO_PIN_6, GPIO_MODE_OUT_PP);
  56   1        GPIO_Init(GPIO4, GPIO_PIN_5, GPIO_MODE_OUT_PP);
  57   1        GPIO_Init(GPIO4, GPIO_PIN_4, GPIO_MODE_OUT_PP);
  58   1        GPIO_Init(GPIO4, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  59   1        GPIO_Init(GPIO4, GPIO_PIN_1, GPIO_MODE_OUT_PP);
  60   1        GPIO_Init(GPIO3, GPIO_PIN_7, GPIO_MODE_OUT_PP);
  61   1        GPIO_Init(GPIO3, GPIO_PIN_6, GPIO_MODE_OUT_PP);
  62   1        GPIO_Init(GPIO3, GPIO_PIN_4, GPIO_MODE_OUT_PP);
  63   1        GPIO_Init(GPIO3, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  64   1        GPIO_Init(GPIO3, GPIO_PIN_2, GPIO_MODE_OUT_PP);
  65   1        GPIO_Init(GPIO3, GPIO_PIN_1, GPIO_MODE_IN_PU); /* 面板选择厚度 */
  66   1        GPIO_Init(GPIO3, GPIO_PIN_0, GPIO_MODE_OUT_PP);
  67   1        GPIO_Init(GPIO1, GPIO_PIN_0, GPIO_MODE_OUT_PP);
  68   1        GPIO_Init(GPIO1, GPIO_PIN_1, GPIO_MODE_OUT_PP);
  69   1        GPIO_Init(GPIO1, GPIO_PIN_2, GPIO_MODE_OUT_PP);
  70   1        GPIO_Init(GPIO1, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  71   1        GPIO_Init(GPIO2, GPIO_PIN_3, GPIO_MODE_OUT_PP);   // P2.3输出
  72   1        GPIO_Init(GPIO2, GPIO_PIN_5, GPIO_MODE_OUT_PP);
  73   1        GPIO_Init(GPIO2, GPIO_PIN_6, GPIO_MODE_OUT_PP);
  74   1        GPIO_Init(GPIO2, GPIO_PIN_7, GPIO_MODE_OUT_PP);
  75   1        GPIO_Init(GPIO0, GPIO_PIN_0, GPIO_MODE_OUT_PP);
  76   1        GPIO_Init(GPIO0, GPIO_PIN_1, GPIO_MODE_OUT_PP);
  77   1        GPIO_Init(GPIO2, GPIO_PIN_3, GPIO_MODE_OUT_PP);
  78   1        SC_GPIO_LowOutput();
  79   1        /*GPIO_Init write here*/    
  80   1      }
  81          
  82          void SC_GPIO_LowOutput(void)
  83          {
  84   1        P02 = 0;
  85   1        P03 = 0;
  86   1        P05 = 0;
  87   1        P06 = 0;
  88   1        P52 = 0;
  89   1        P53 = 0;
  90   1        P54 = 0;
  91   1        P55 = 0;
  92   1        P47 = 0;
  93   1        P46 = 0;
  94   1        P45 = 0;
  95   1        P44 = 0;
  96   1        P43 = 0;
  97   1        P41 = 0;
  98   1        P36 = 0;
  99   1        P34 = 0;
 100   1        P33 = 0;
 101   1        P32 = 0;
 102   1        P30 = 0;
 103   1        P10 = 0;
 104   1        P11 = 0;
 105   1        P12 = 0;
 106   1        P13 = 0;
 107   1        P14 = 0;
 108   1        P25 = 0;
 109   1        P26 = 0;
 110   1        P27 = 0;
 111   1        P00 = 0;
 112   1        P01 = 0;
 113   1        P23 = 1;
 114   1      }
 115          
C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 3   

 116          
 117          /*****************************************************
 118          *函数名称: SC_TIM0_Init
 119          *函数功能: TIMER0初始化函数   （705us中断一次）
 120          *入口参数：void
 121          *出口参数：void 
 122          *****************************************************/
 123          void SC_TIM0_Init(void)
 124          {
 125   1        TIM0_TimeBaseInit(TIM0_PRESSEL_FSYS_D12, TIM0_MODE_TIMER);
 126   1        TIM0_WorkModeConfig(TIM0_WORK_MODE1, Time_705us, 0);
 127   1        TIM0_ITConfig(ENABLE, HIGH);
 128   1        TIM0_Cmd(ENABLE);
 129   1        /*TIM0_Init write here*/    
 130   1      }
 131          
 132          /*****************************************************
 133          *函数名称: SC_TIM1_Init
 134          *函数功能: TIMER1初始化函数    （1ms中断一次）
 135          *入口参数：void
 136          *出口参数：void
 137          *****************************************************/
 138          void SC_TIM1_Init(void)
 139          {
 140   1        TIM1_TimeBaseInit(TIM1_PRESSEL_FSYS_D12, TIM1_MODE_TIMER);
 141   1        TIM1_WorkModeConfig(TIM1_WORK_MODE1, Time_1ms);
 142   1        TIM1_ITConfig(ENABLE, HIGH);
 143   1        TIM1_Cmd(ENABLE);
 144   1        /*TIM1_Init write here*/  
 145   1      }
 146          
 147          
 148          
 149          /*****************************************************
 150          *函数名称: SC_PWM0_Init
 151          *函数功能: PWM0初始化函数
 152          *入口参数：void
 153          *出口参数：void 
 154          *****************************************************/
 155          void SC_PWM0_Init(void)
 156          {
 157   1        /*PWM0独立模式*/ PWM_Init(PWM0_PRESSEL_FHRC_D8, 111);
 158   1        /*PWM05 独立模式*/ PWM_IndependentModeConfigEX(PWM05, 0, PWM_OUTPUTSTATE_ENABLE);
 159   1        /*PWM07 独立模式*/ PWM_IndependentModeConfigEX(PWM07, 0, PWM_OUTPUTSTATE_ENABLE);
 160   1        /*PWM0*/ PWM_Aligned_Mode_Select(PWM0_Edge_Aligned_Mode);
 161   1        /*PWM0*/ PWM_FaultDetectionConfigEX(PWM0_Type, DISABLE);
 162   1        /*PWM0*/ PWM_FaultDetectionModeConfigEX(PWM0_Type, PWM0_Immediate_Mode, PWM0_FaultDetectionVoltage_Low, P
             -WM0_WaveFilteringTime_0us);
 163   1        /*PWM0中断使能*/ PWM_ITConfigEX(PWM0_Type, DISABLE, LOW);
 164   1        /*PWM0开关*/ PWM_CmdEX(PWM0_Type, ENABLE);
 165   1        /*PWM0_Init write here*/  
 166   1      }
 167          
 168          
 169          
 170          /*****************************************************
 171          *函数名称: SC_PWM2_Init
 172          *函数功能: PWM1初始化函数
 173          *入口参数：void
 174          *出口参数：void 
 175          *****************************************************/
 176          void SC_PWM2_Init(void)
C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 4   

 177          {
 178   1        PWM_Init(PWM2_PRESSEL_FHRC_D1, PWM_1KPressel);          /*PWM2初始化*/
 179   1        PWM_IndependentModeConfigEX(PWM20, 31999, PWM_OUTPUTSTATE_ENABLE); /*PWM20 独立模式*/
 180   1        PWM_ITConfigEX(PWM2_Type, DISABLE, LOW);            /*PWM2中断使能*/
 181   1        PWM_CmdEX(PWM2_Type, ENABLE);
 182   1        /*PWM2_Init write here*/  
 183   1      }
 184          
 185          /*****************************************************
 186          *函数名称: SC_PWM3_Init
 187          *函数功能: PWM1初始化函数
 188          *入口参数：void
 189          *出口参数：void 
 190          *****************************************************/
 191          void SC_PWM3_Init(void)
 192          {
 193   1        PWM_Init(PWM3_PRESSEL_FHRC_D1, PWM_4KPressel);         /*PWM3初始化*/
 194   1        PWM_IndependentModeConfigEX(PWM30, 0, PWM_OUTPUTSTATE_ENABLE); /*PWM30 独立模式*/
 195   1        PWM_ITConfigEX(PWM3_Type, DISABLE, LOW);           /*PWM3中断使能*/
 196   1        PWM_CmdEX(PWM3_Type, ENABLE);                /*PWM3开关*/
 197   1        /*PWM3_Init write here*/  
 198   1      }
 199          
 200          void SC_PWM3_Init_2Khz(void)
 201          {
 202   1        PWM_Init(PWM3_PRESSEL_FHRC_D1, PWM_2KPressel);         /*PWM3初始化*/
 203   1        PWM_IndependentModeConfigEX(PWM30, 0, PWM_OUTPUTSTATE_ENABLE); /*PWM30 独立模式*/
 204   1        PWM_ITConfigEX(PWM3_Type, DISABLE, LOW);           /*PWM3中断使能*/
 205   1        PWM_CmdEX(PWM3_Type, ENABLE);                /*PWM3开关*/
 206   1      }
 207          
 208          void SC_PWM3_Init_41Khz(void)
 209          {
 210   1        PWM_Init(PWM3_PRESSEL_FHRC_D1, PWM_4_1KPressel);         /*PWM3初始化*/
 211   1        PWM_IndependentModeConfigEX(PWM30, 0, PWM_OUTPUTSTATE_ENABLE); /*PWM30 独立模式*/
 212   1        PWM_ITConfigEX(PWM3_Type, DISABLE, LOW);           /*PWM3中断使能*/
 213   1        PWM_CmdEX(PWM3_Type, ENABLE);                /*PWM3开关*/
 214   1      }
 215          void SC_PWM3_Init_33Khz(void)
 216          {
 217   1        PWM_Init(PWM3_PRESSEL_FHRC_D1, PWM_3_3KPressel);         /*PWM3初始化*/
 218   1        PWM_IndependentModeConfigEX(PWM30, 0, PWM_OUTPUTSTATE_ENABLE); /*PWM30 独立模式*/
 219   1        PWM_ITConfigEX(PWM3_Type, DISABLE, LOW);           /*PWM3中断使能*/
 220   1        PWM_CmdEX(PWM3_Type, ENABLE);                /*PWM3开关*/
 221   1      }
 222          
 223          /*****************************************************
 224          *函数名称: SC_INT_Init
 225          *函数功能: INT初始化函数
 226          *入口参数：void
 227          *出口参数：void
 228          *****************************************************/
 229          void SC_INT_Init(void)
 230          {
 231   1        GPIO_Init(GPIO2, GPIO_PIN_0, GPIO_MODE_IN_PU);
 232   1        GPIO_Init(GPIO2, GPIO_PIN_1, GPIO_MODE_IN_PU);
 233   1        GPIO_Init(GPIO2, GPIO_PIN_2, GPIO_MODE_IN_PU);
 234   1        GPIO_Init(GPIO1, GPIO_PIN_6, GPIO_MODE_IN_PU);
 235   1        GPIO_Init(GPIO1, GPIO_PIN_7, GPIO_MODE_IN_PU);
 236   1        GPIO_Init(GPIO0, GPIO_PIN_4, GPIO_MODE_IN_PU);
 237   1        INT2_SetTriggerMode(0x00 | INT20 | INT21 | INT22, INT_TRIGGER_RISE_FALL);
 238   1        INT2_ITConfig(ENABLE, LOW);
C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 5   

 239   1        INT1_SetTriggerMode(0x00 | INT16 | INT17, INT_TRIGGER_RISE_FALL);
 240   1        INT1_ITConfig(ENABLE, LOW);
 241   1        INT0_SetTriggerMode(0x00 | INT04, INT_TRIGGER_RISE_FALL);
 242   1        INT0_ITConfig(ENABLE, LOW);
 243   1        /*INT_Init write here*/
 244   1        /*INT_Init write here*/ 
 245   1      }
 246          
 247          /*****************************************************
 248          *函数名称: SC_ADC_Init
 249          *函数功能: ADC初始化函数
 250          *入口参数：void
 251          *出口参数：void 
 252          *****************************************************/
 253          void SC_ADC_Init(void)
 254          {
 255   1        ADC_Init(ADC_PRESSEL_32CLOCK, ADC_Cycle_Null);
 256   1        ADC_EAINConfig(ADC_EAIN_1, ENABLE); /*AIN1口模式设置，设置为ADC口，去除上拉*/
 257   1        ADC_EAINConfig(ADC_EAIN_9, ENABLE); /*AIN9口模式设置，设置为ADC口，去除上拉*/
 258   1        ADC_ChannelConfig(ADC_CHANNEL_9, ENABLE);/* ADCCON选择通道 */
 259   1        ADC_ITConfig(DISABLE, LOW);/* ADCCON|=0X80; */
 260   1        ADC_Cmd(ENABLE);/* 先关闭 */
 261   1        /*ADC_Init write here*/
 262   1      }
 263          
 264          /*****************************************************
 265           *函数名称: SC_WDT_Init
 266           *函数功能: 看门狗初始化函数
 267           *入口参数：void
 268           *出口参数：void
 269           *****************************************************/
 270          void SC_WDT_Init(void)
 271          {
 272   1        WDT_Init(WDT_OverflowTime_500MS);
 273   1        OPTION_WDT_Cmd(ENABLE);
 274   1        /*WDT_Init write here*/
 275   1      }
 276          /*****************************************************
 277           *函数名称: SC_EXtern_Init
 278           *函数功能: 32K晶振初始化函数
 279           *入口参数：void
 280           *出口参数：void
 281           *****************************************************/
 282          
 283          void SC_EXtern_Init(void)
 284          {
 285   1        OPTION_XTIPLL_Cmd(ENABLE);
 286   1      }
 287          
 288          /* 选择完面板厚度后将管脚设置推挽关闭，达到省电 */
 289          void Clr_IO(void)
 290          {
 291   1        Delay1ms();
 292   1        GPIO_Init(GPIO3, GPIO_PIN_1, GPIO_MODE_OUT_PP);
 293   1        Delay1ms();
 294   1        P31 = 0;
 295   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    861    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   SC_INIT                                                           04/26/2023 14:07:03 PAGE 6   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
