C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SC95F_GPIO
OBJECT MODULE PLACED IN ..\Output\sc95f_gpio.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE ..\FWLib\SC95F_Lib\src\sc95f_gpio.c OMF2 BROWSE INCDIR(..\FWLib\SC95F_Lib\i
                    -nc;..\User) DEFINE(SC95F8x2x) DEBUG PRINT(..\List\sc95f_gpio.lst) OBJECT(..\Output\sc95f_gpio.obj)

line level    source

   1          //************************************************************
   2          //  Copyright (c) 深圳市赛元微电子有限公司
   3          //      文件名称        : sc95f_gpio.c
   4          //      作者            : 
   5          //      模块功能        : GPIO固件库函数C文件
   6          //      局部函数列表:
   7          //  最后更正日期: 2020/8/13
   8          //      版本            : V1.0 
   9          //  说明        ：该文件仅适用于SC95Fxx1x、SC95Fxx2x系列芯片  
  10          //*************************************************************
  11          
  12          #include "sc95f_gpio.h"
  13          
  14          /**************************************************
  15          *函数名称：void GPIO_DeInit(void)
  16          *函数功能：GPIO相关寄存器复位至缺省值
  17          *入口参数：void
  18          *出口参数：void
  19          **************************************************/
  20          void GPIO_DeInit(void)
  21          {
  22   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)  
                      P0CON = 0x00;
                      P1CON = 0x00;
                      P2CON = 0x00;
                      P3CON = 0x00;
                      P4CON = 0x00;
                      P5CON = 0x00;
                      P0PH = 0x00;
                      P1PH = 0x00;
                      P2PH = 0x00;
                      P3PH = 0x00;
                      P4PH = 0x00;
                      P5PH = 0x00;
                      P0 = P1 = P2 = P3 = P4 = P5 = 0;
                      #endif
  37   1              #if defined (SC95F8x2x) || defined (SC95F7x2x)
  38   1              P0CON = 0x00;
  39   1              P1CON = 0x00;
  40   1              P2CON = 0x00;
  41   1              P5CON = 0x00;
  42   1              P0PH = 0x00;
  43   1              P1PH = 0x00;
  44   1              P2PH = 0x00;
  45   1              P5PH = 0x00;
  46   1              P0 = P1 = P2 = P5 = 0;
  47   1              #endif
  48   1      }
  49          
  50          /**************************************************
  51          *函数名称：void GPIO_Init(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  52          *函数功能：GPIO口模式配置初始化
  53          *入口参数：GPIOx                选择操作的GPIO口
  54                             PortPins             选择GPIO管脚Pxy
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 2   

  55                             GPIO_Mode    选择GPIO口模式（高阻输入、上拉输入、推挽输出）
  56          *出口参数：void
  57          **************************************************/
  58          void GPIO_Init(GPIO_TypeDef GPIOx, uint8_t PortPins, GPIO_Mode_TypeDef GPIO_Mode)
  59          {
  60   1              if(GPIOx == GPIO0)
  61   1              {
  62   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  63   2                      {
  64   3                              P0CON &= ~PortPins;
  65   3                              P0PH  &= ~PortPins;
  66   3                      }
  67   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
  68   2                      {
  69   3                              P0CON &= ~PortPins;
  70   3                              P0PH  |= PortPins;
  71   3                      }
  72   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
  73   2                      {
  74   3                              P0CON |= PortPins;
  75   3                      }               
  76   2              }
  77   1              else if(GPIOx == GPIO1)
  78   1              {
  79   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  80   2                      {
  81   3                              P1CON &= ~PortPins;
  82   3                              P1PH  &= ~PortPins;
  83   3                      }
  84   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
  85   2                      {
  86   3                              P1CON &= ~PortPins;
  87   3                              P1PH  |= PortPins;
  88   3                      }
  89   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
  90   2                      {
  91   3                              P1CON |= PortPins;
  92   3                      }       
  93   2              }
  94   1              else if(GPIOx == GPIO2)
  95   1              {
  96   2                      if(GPIO_Mode == GPIO_MODE_IN_HI)
  97   2                      {
  98   3                              P2CON &= ~PortPins;
  99   3                              P2PH  &= ~PortPins;
 100   3                      }
 101   2                      if(GPIO_Mode == GPIO_MODE_IN_PU)
 102   2                      {
 103   3                              P2CON &= ~PortPins;
 104   3                              P2PH  |= PortPins;
 105   3                      }
 106   2                      if(GPIO_Mode == GPIO_MODE_OUT_PP)
 107   2                      {
 108   3                              P2CON |= PortPins;
 109   3                      }       
 110   2              }
 111   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)
                      else if(GPIOx == GPIO3)
                      {
                              if(GPIO_Mode == GPIO_MODE_IN_HI)
                              {
                                      P3CON &= ~PortPins;
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 3   

                                      P3PH  &= ~PortPins;
                              }
                              if(GPIO_Mode == GPIO_MODE_IN_PU)
                              {
                                      P3CON &= ~PortPins;
                                      P3PH  |= PortPins;
                              }
                              if(GPIO_Mode == GPIO_MODE_OUT_PP)
                              {
                                      P3CON |= PortPins;
                              }       
                      }
                      else if(GPIOx == GPIO4)
                      {
                              if(GPIO_Mode == GPIO_MODE_IN_HI)
                              {
                                      P4CON &= ~PortPins;
                                      P4PH  &= ~PortPins;
                              }
                              if(GPIO_Mode == GPIO_MODE_IN_PU)
                              {
                                      P4CON &= ~PortPins;
                                      P4PH  |= PortPins;
                              }
                              if(GPIO_Mode == GPIO_MODE_OUT_PP)
                              {
                                      P4CON |= PortPins;
                              }       
                      }
                      #endif
 147   1              else
 148   1              {
 149   2                      if(GPIOx == GPIO5)
 150   2                      {
 151   3                              if(GPIO_Mode == GPIO_MODE_IN_HI)
 152   3                              {
 153   4                                      P5CON &= ~PortPins;
 154   4                                      P5PH  &= ~PortPins;
 155   4                              }
 156   3                              if(GPIO_Mode == GPIO_MODE_IN_PU)
 157   3                              {
 158   4                                      P5CON &= ~PortPins;
 159   4                                      P5PH  |= PortPins;
 160   4                              }
 161   3                              if(GPIO_Mode == GPIO_MODE_OUT_PP)
 162   3                              {
 163   4                                      P5CON |= PortPins;
 164   4                              }               
 165   3                      }
 166   2              }
 167   1      }
 168          
 169          /**************************************************
 170          *函数名称：void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 171          *函数功能：GPIO口赋值
 172          *入口参数：GPIOx        选择操作的GPIO口
 173                             PortVal  GPIO口的值
 174          *出口参数：void
 175          **************************************************/
 176          void GPIO_Write(GPIO_TypeDef GPIOx, uint8_t PortVal)
 177          {
 178   1          if(GPIOx == GPIO0)
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 4   

 179   1              {
 180   2                      P0 = PortVal;
 181   2              }
 182   1              if(GPIOx == GPIO1)
 183   1              {
 184   2                      P1 = PortVal;
 185   2              }
 186   1              if(GPIOx == GPIO2)
 187   1              { 
 188   2                      P2 = PortVal;
 189   2              }
 190   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)
                      if(GPIOx == GPIO3)
                      { 
                              P3 = PortVal;
                      }
                      if(GPIOx == GPIO4)
                      { 
                              P4 = PortVal;
                      }
                      #endif
 200   1              if(GPIOx == GPIO5)
 201   1              { 
 202   2                      P5 = PortVal;
 203   2              }
 204   1      }
 205          
 206          /**************************************************
 207          *函数名称：void GPIO_WriteHigh(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 208          *函数功能：GPIO口管脚Pxy置位
 209          *入口参数：GPIOx                选择操作的GPIO口
 210                             PortPins             选择GPIO口管脚Pxy
 211          *出口参数：void
 212          **************************************************/
 213          void GPIO_WriteHigh(GPIO_TypeDef GPIOx, uint8_t PortPins)
 214          {
 215   1              if(GPIOx == GPIO0)
 216   1              {
 217   2                      P0 |= PortPins;
 218   2              }
 219   1              if(GPIOx == GPIO1)
 220   1              {
 221   2                      P1 |= PortPins;
 222   2              }
 223   1              if(GPIOx == GPIO2)
 224   1              {   
 225   2                      P2 |= PortPins; 
 226   2              }
 227   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)  
                      if(GPIOx == GPIO3)
                      {   
                              P3 |= PortPins; 
                      } 
                      if(GPIOx == GPIO4)
                      {   
                              P4 |= PortPins; 
                      } 
                      #endif
 237   1              if(GPIOx == GPIO5)
 238   1              {   
 239   2                      P5 |= PortPins; 
 240   2              }    
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 5   

 241   1      }
 242          
 243          /**************************************************
 244          *函数名称：void GPIO_WriteLow(GPIO_TypeDef GPIOx, GPIO_Pin_TypeDef PortPins)
 245          *函数功能：GPIO口管脚Pxy复位
 246          *入口参数：GPIOx                选择操作的GPIO口
 247                             PortPins             选择GPIO口管脚Pxy
 248          *出口参数：void
 249          **************************************************/
 250          void GPIO_WriteLow(GPIO_TypeDef GPIOx, uint8_t PortPins)
 251          {
 252   1              if(GPIOx == GPIO0)
 253   1              {
 254   2                      P0 &= ~PortPins;
 255   2              }
 256   1              if(GPIOx == GPIO1)
 257   1              {
 258   2                      P1 &= ~PortPins;
 259   2              }
 260   1              if(GPIOx == GPIO2)
 261   1              {   
 262   2                      P2 &= ~PortPins;        
 263   2              } 
 264   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)
                      if(GPIOx == GPIO3)
                      {   
                              P3 &= ~PortPins;        
                      } 
                      if(GPIOx == GPIO4)
                      {   
                              P4 &= ~PortPins;
                      } 
                      #endif
 274   1              if(GPIOx == GPIO5)
 275   1              {   
 276   2                      P5 &= ~PortPins;        
 277   2              }  
 278   1      }
 279          
 280          /**************************************************
 281          *函数名称：uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 282          *函数功能：读GPIO口Px的值
 283          *入口参数：GPIOx        选择操作的GPIO口
 284          *出口参数：uint8_t      返回Px的值
 285          **************************************************/
 286          uint8_t GPIO_ReadPort(GPIO_TypeDef GPIOx)
 287          {
 288   1          if(GPIOx == GPIO0)
 289   1              {
 290   2                      return P0;
 291   2              }
 292   1              else if(GPIOx == GPIO1)
 293   1              {
 294   2                      return P1;
 295   2              }
 296   1              else if(GPIOx == GPIO2)
 297   1              {
 298   2                      return P2;
 299   2              }
 300   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)
                      else if(GPIOx == GPIO3)
                      {
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 6   

                              return P3;
                      }
                      else if(GPIOx == GPIO4)
                      {
                              return P4;
                      }
                      #endif
 310   1              else 
 311   1              {
 312   2                      return P5;
 313   2              }
 314   1      }
 315          
 316          /**************************************************
 317          *函数名称：BitStatus GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 318          *函数功能：读GPIO口管脚Pxy的值
 319          *入口参数：GPIOx                选择操作的GPIO口
 320                             PortPins             选择GPIO口管脚Pxy
 321          *出口参数：BitStatus    返回Pxy的值
 322          **************************************************/
 323          uint8_t GPIO_ReadPin(GPIO_TypeDef GPIOx, uint8_t PortPins)
 324          {
 325   1              if(GPIOx == GPIO0)
 326   1              {
 327   2                      return (P0 & PortPins);
 328   2              }
 329   1              else if(GPIOx == GPIO1)
 330   1              {
 331   2                      return (P1 & PortPins);
 332   2              }
 333   1              else if(GPIOx == GPIO2)
 334   1              {
 335   2                      return (P2 & PortPins);
 336   2              }
 337   1              #if defined (SC95F8x1x) || defined (SC95F7x1x)
                      else if(GPIOx == GPIO3)
                      {
                              return (P3 & PortPins);
                      }
                      else if(GPIOx == GPIO4)
                      {
                              return (P4 & PortPins);
                      }
                      #endif
 347   1              else
 348   1              {
 349   2                      return (P5 & PortPins); 
 350   2              }                                 
 351   1      }
 352          
 353          /******************* (C) COPYRIGHT 2020 SinOne Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    279    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.01   SC95F_GPIO                                                            09/07/2020 16:59:31 PAGE 7   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
